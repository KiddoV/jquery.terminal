{"version":3,"sources":["jquery.terminal.js"],"sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.31.1\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2021 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * debounce function from Lodash\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * The MIT License\n *\n * emoji regex v9.0.0 by Mathias Bynens\n * MIT license\n *\n * broken image by Sophia Bai from the Noun Project (CC-BY)\n *\n * Date: Thu, 06 Jan 2022 18:16:30 +0000\n */\n/* global define, Map */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : self || window);\n// -----------------------------------------------------------------------\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root;\n    if (typeof window !== 'undefined') {\n        root = window;\n    } else if (typeof self !== 'undefined') {\n        root = self;\n    } else if (typeof global !== 'undefined') {\n        root = global;\n    } else {\n        throw new Error('Unknow context');\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], function(jquery, wcwidth) {\n            factory(jquery, wcwidth, root);\n            return jquery;\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (typeof window !== 'undefined') {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth, root);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        if (!root.jQuery) {\n            root.$ = root.cash;\n        }\n        factory(root.jQuery || root.cash, root.wcwidth, root);\n    }\n})(function($, wcwidth, root, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    /* istanbul ignore next */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n    // -----------------------------------------------------------------------\n    // IE11 polyfill\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    if ('Map' in root && !('clear' in Map.prototype)) {\n        Map.prototype.clear = function() {\n            this.forEach(function(value, key, map) {\n                map.delete(key);\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: Debounce from Lodash\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    var debounce = (function() {\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        function isObject(value) {\n            var type = typeof value;\n            return value != null && (type == 'object' || type == 'function');\n        }\n        function now() {\n            return Date.now();\n        }\n        return function debounce(func, wait, options) {\n            var nativeMax = Math.max,\n                nativeMin = Math.min;\n\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing\n                    ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n                    : timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n            }\n\n            function timerExpired() {\n                var time = now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(now());\n            }\n\n            function debounced() {\n                var time = now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    if (!this.is(':focus')) {\n                        target.focus();\n                    }\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                if (!this.is(':focus')) {\n                    target.focus();\n                }\n                var selection = window.getSelection();\n                selection.collapse(selection.focusNode, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: callback based event handler plugin generator\n    // -----------------------------------------------------------------------\n    function make_callback_plugin(options) {\n        var factory_settings = $.extend({\n            init: $.noop,\n            destroy: $.noop,\n            name: 'event'\n        }, options);\n        return function(callback, options) {\n            var trigger = arguments.length === 0;\n            var unbind = arguments[0] === \"unbind\";\n            if (!trigger && !unbind && !is_function(callback)) {\n                throw new Error('Invalid argument, it need to a function or string ' +\n                                '\"unbind\" or no arguments.');\n            }\n            if (unbind) {\n                callback = is_function(arguments[1]) ? arguments[1] : null;\n            }\n            var data_name = 'callbacks_' + factory_settings.name;\n            return this.each(function() {\n                var $this = $(this);\n                var callbacks;\n                function handler(arg) {\n                    callbacks.fireWith($this, [arg]);\n                }\n                if (trigger || unbind) {\n                    callbacks = $this.data(data_name);\n                    if (trigger) {\n                        callbacks && callbacks.fire();\n                    } else {\n                        if (callback && callbacks) {\n                            callbacks.remove(callback);\n                            if (!callbacks.has()) {\n                                callbacks = null;\n                            }\n                        } else {\n                            callbacks = null;\n                        }\n                        if (!callbacks) {\n                            $this.removeData(data_name);\n                            factory_settings.destroy.call(this, handler, options);\n                        }\n                    }\n                } else if ($this.data(data_name)) {\n                    $(this).data(data_name).add(callback);\n                } else {\n                    callbacks = $.Callbacks();\n                    callbacks.add(callback);\n                    $this.data(data_name, callbacks);\n                    factory_settings.init.call(this, handler, options);\n                }\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = make_callback_plugin({\n        name: 'resize',\n        init: function(handler, options) {\n            var settings = $.extend({\n                prefix: ''\n            }, options);\n            var $this = $(this);\n            var resizer;\n            var first = true;\n            if ($this.is('body')) {\n                $(window).on('resize.resizer', handler);\n            } else if (window.ResizeObserver) {\n                resizer = new ResizeObserver(function() {\n                    if (!first) {\n                        handler();\n                    }\n                    first = false;\n                });\n                resizer.observe(this);\n                $this.data('observer', resizer);\n            } else {\n                var iframe = $('<iframe/>').addClass(settings.prefix + 'resizer')\n                    .appendTo(this)[0];\n                $(iframe.contentWindow).on('resize', handler);\n            }\n        },\n        destroy: function() {\n            var $this = $(this);\n            if (window.ResizeObserver) {\n                var observer = $this.data('observer');\n                if (observer) {\n                    observer.unobserve(this);\n                    $this.removeData('observer');\n                }\n            } else {\n                var iframe = $this.find('> iframe[class$=\"resizer\"]');\n                if (iframe.length) {\n                    // just in case of memory leaks in IE\n                    $(iframe[0].contentWindow).off('resize').remove();\n                    iframe.remove();\n                } else if ($this.is('body')) {\n                    $(window).off('resize.resizer');\n                }\n            }\n        }\n    });\n    // -----------------------------------------------------------------------\n    // :: Mobile friendly scroll that work without scrollbar (for less)\n    // -----------------------------------------------------------------------\n    $.fn.touch_scroll = make_callback_plugin({\n        name: 'touch',\n        init: function(handler) {\n            var origin;\n            var previous;\n            $(this).on('touchstart.scroll', function(e) {\n                e = e.originalEvent;\n                if (e.target.tagName.toLowerCase() !== 'a' && e.touches.length === 1) {\n                    previous = origin = e.touches[0];\n                }\n            }).on('touchmove.scroll', function(e) {\n                e = e.originalEvent;\n                if (origin && e.touches.length === 1) {\n                    var current = e.touches[0];\n                    var ret = handler({\n                        origin: origin,\n                        previous: previous,\n                        current: current\n                    });\n                    if (ret === false) {\n                        e.preventDefault();\n                    }\n                    previous = current;\n                }\n            }).on('touchend.scroll', function() {\n                if (origin || previous) {\n                    origin = previous = null;\n                }\n            });\n        },\n        destroy: function() {\n            $(this).off('touchstart.scroll touchmove.scroll touchend.scroll');\n        }\n    });\n    // -----------------------------------------------------------------------\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    function unpromise(value, callback, error) {\n        if (value !== undefined) {\n            if (is_function(value.catch)) {\n                value.catch(error);\n            }\n            if (is_function(value.done)) {\n                return value.done(callback);\n            } else if (is_function(value.then)) {\n                return value.then(callback);\n            } else if (value instanceof Array) {\n                var promises = value.filter(function(value) {\n                    return value && (is_function(value.done) || is_function(value.then));\n                });\n                if (promises.length) {\n                    var result = $.when.apply($, value).then(function() {\n                        return callback([].slice.call(arguments));\n                    });\n                    if (is_function(value.catch)) {\n                        result.catch(error);\n                    }\n                    return result;\n                }\n            }\n            // TODO: investigate why it break when called\n            //       when value is undefined\n            //       when moving this line outside if\n            //       it breaks all completion unit tests\n            return callback(value);\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (root.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new root.IntersectionObserver(function(entries) {\n                    defer.resolve(entries[0].isIntersecting && entries[0].ratio === 1);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    var entity_re = /(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /(\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC3B\\u200D\\u2744|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E-\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F?|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\](?:[^\\]\\\\]*(?:\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[((?:-?[@!gbiuso])*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^(\\[\\[(?:(?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\])([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)(\\])$/i;\n    var format_begin_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\]?$/i;\n    var self_closing_re = /^(?:\\[\\[)?[^;]*@[^;]*;/;\n    var color_re = /^(?:#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})|rgba?\\([^)]+\\)|hsla?\\([^)]+\\))$/i;\n    var url_re = /(\\b(?:file|ftp|https?):\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'\\\\<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\"\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'\\\\<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\\\\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_exec_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^\\]]+\\](?:\\\\[[\\]]|[^\\]])*\\]|\\[\\[[\\s\\S]+?\\]\\])/;\n    var format_exec_re = /(\\[\\[[\\s\\S]+?\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*'|`(?:[^`\\\\]|\\\\(?:\\\\\\\\)*`|\\\\\\\\)*`)/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    var broken_image = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\"><title id=\"title2\">rounded</title><path id=\"terminal-broken-image\" d=\"m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z\" /></svg>';\n    var use_broken_image = '<svg class=\"terminal-broken-image\" role=\"presentation\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><use xlink:href=\"#terminal-broken-image\"/></svg>';\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: features flags\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        if (typeof document === 'undefined') {\n            return false;\n        }\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var agent = (root.navigator || window.navigator).userAgent;\n    var is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent);\n    var is_IEMobile = /IEMobile/.test(agent);\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        if (is_IE && !is_IEMobile) {\n            return false;\n        }\n        if (typeof document === 'undefined') {\n            return true; // run without browser context\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = root.CSS && root.CSS.supports &&\n            root.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in root && 'key' in root.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = root.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return !!get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_browser = (function() {\n        try {\n            return this === window;\n        } catch (e) {\n            return false;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        // detect iPad 13\n        // ref: https://stackoverflow.com/a/57924983/387194s\n        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) {\n            return true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || root.opera);\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    // -------------------------------------------------------------------------\n    var ch_unit_bug = false;\n    if (is_browser) {\n        $(function() {\n            function width(e) {\n                return e[0].getBoundingClientRect().width;\n            }\n            var base = '<span style=\"font-family: monospace;visibility:hidden;';\n            var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>');\n            ch.appendTo('body');\n            var space = $(base + '\">&nbsp;</span>').appendTo('body');\n            // in FireFox the size of space is fraction larger #579\n            ch_unit_bug = Math.abs(width(ch) - width(space)) > 0.0001;\n            ch.remove();\n            space.remove();\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: css helper that work with css variables\n    // :: jQuery css method from 3.4 support them by default\n    // -----------------------------------------------------------------------\n    function css(node, obj, value) {\n        if (node instanceof $.fn.init) {\n            node.each(function() {\n                css(this, obj, value);\n            });\n        } else if ($.isPlainObject(obj)) {\n            Object.keys(obj).forEach(function(key) {\n                node.style.setProperty(key, obj[key]);\n            });\n        } else if (typeof value === 'undefined') {\n            return node.style.getPropertyValue(obj);\n        } else {\n            node.style.setProperty(obj, value);\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        if (arguments[0] instanceof $.terminal.Exception) {\n            label = arguments[0].type;\n            e = arguments[0];\n        }\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // ref: https://stackoverflow.com/a/6248722/387194\n    function generate_id() {\n        // I generate the UID from two parts here\n        // to ensure the random number provide enough bits.\n        var firstPart = (Math.random() * 46656) | 0;\n        var secondPart = (Math.random() * 46656) | 0;\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n        return firstPart + secondPart;\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    /*\n    function time() {\n        // performance.now almost equal Date.now()- performance.timing.navigationStart\n        // the difference check should be almost the same\n        return performance ? performance.now() : Date.now();\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = is_array(init) ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: Class for Worker that do some computation when needed\n    // :: if validation function return false it mean that condition changed\n    // :: and cache need to be cleared. If value was not processed it will run\n    // :: the action\n    // -------------------------------------------------------------------------\n    function WorkerCache(options) {\n        var settings = $.extend({\n            validation: $.noop,\n            action: $.noop,\n            onCache: $.noop\n        }, options);\n        this._onCache = settings.onCache.bind(this);\n        this._action = settings.action.bind(this);\n        this._validation = settings.validation.bind(this);\n        if ('Map' in root) {\n            this._cache = new Map();\n        }\n    }\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.validate = function(key) {\n        var valid = this._validation(key);\n        var test = valid === undefined || valid === true;\n        if (!test) {\n            this._cache.clear();\n        }\n        return test;\n    };\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.get = function(key) {\n        if (!this._cache) {\n            return this._action(key);\n        }\n        var value;\n        if (this.validate(key) && this._cache.has(key)) {\n            value = this._cache.get(key);\n            this._onCache({cache: value});\n            return value;\n        }\n        value = this._action(key);\n        this._cache.set(key, value);\n        return value;\n    };\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (is_array(new_data)) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    function OutputLines(settings) {\n        this._settings = settings;\n        this._lines = [];\n        this._snapshot = [];\n    }\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.make_snapshot = function(snapshot) {\n        this._snapshot.push(snapshot);\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.get_partial = function() {\n        var last = this._snapshot[this._snapshot.length - 1];\n        return last;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.update_snapshot = function(index, snapshot) {\n        this._snapshot[index] = snapshot;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.limit_snapshot = function(limit) {\n        this._snapshot = this._snapshot.slice(limit);\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.clear_snapshot = function() {\n        this._snapshot = [];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.get_snapshot = function() {\n        return this._snapshot.reduce(function(acc, arr) {\n            return acc.concat(arr);\n        }, []).join('\\n');\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.join = function() {\n        var args = [].slice.call(arguments);\n        if (args.some(is_function)) {\n            return function() {\n                return args.reduce(function(acc, arg) {\n                    if (is_function(acc)) {\n                        acc = acc();\n                    }\n                    if (is_function(arg)) {\n                        arg = arg();\n                    }\n                    if (is_promise(acc) || is_promise(arg)) {\n                        return $.when(acc, arg).then(function(acc, arg) {\n                            return acc + arg;\n                        });\n                    }\n                    return arg;\n                });\n            };\n        } else if (args.some(is_promise)) {\n            return args.reduce(function(acc, arg) {\n                return $.when(acc, arg).then(function(acc, arg) {\n                    return acc + arg;\n                });\n            });\n        }\n        return args.join('');\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.import = function(data) {\n        this._lines = data;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.push = function(data) {\n        var value = data[0];\n        var options = data[1];\n        if (this.has_newline()) {\n            this._lines.push(data);\n        } else {\n            var last_line = this.last_line();\n            last_line[0] = this.join(last_line[0], value);\n            last_line[1].newline = options.newline;\n        }\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.clear = function(fn) {\n        this._lines.forEach(function(line, i) {\n            var options = line[1];\n            if (is_function(options.onClear)) {\n                options.onClear.call(self, fn(i));\n            }\n        });\n        this._lines = [];\n        this._snapshot = [];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.data = function() {\n        return this._lines;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.has_newline = function() {\n        if (this._lines.length === 0) {\n            return true;\n        }\n        return this.last_line()[1].newline;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.last_line = function() {\n        var len = this._lines.length;\n        return this._lines[len - 1];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.update = function(index, value, options) {\n        if (value === null) {\n            this._lines.splice(index, 1);\n        } else {\n            this._lines[index][0] = value;\n            if (options) {\n                this._lines[index][1] = $.extend(this._lines[index][1], options);\n            }\n            return this._lines[index][1];\n        }\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.length = function() {\n        return this._lines.length;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.valid_index = function(index) {\n        return !!this._lines[index];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.render = function(cols, fn) {\n        var settings = this._settings();\n        var lines_to_show = [];\n        this._snapshot = [];\n        if (settings.outputLimit >= 0) {\n            // flush will limit lines but if there is lot of\n            // lines we don't need to show them and then remove\n            // them from terminal\n            var limit;\n            if (settings.outputLimit === 0) {\n                limit = cols;\n            } else {\n                limit = settings.outputLimit;\n            }\n            this._lines.forEach(function(line, index) {\n                var value = line[0];\n                var options = line[1];\n                lines_to_show.push({\n                    value: value,\n                    index: index,\n                    options: options\n                });\n            });\n            var pivot = lines_to_show.length - limit - 1;\n            lines_to_show = lines_to_show.slice(pivot);\n        } else {\n            lines_to_show = this._lines.map(function(line, index) {\n                return {\n                    value: line[0],\n                    index: index,\n                    options: line[1]\n                };\n            });\n        }\n        return fn(lines_to_show);\n    };\n    // -------------------------------------------------------------------------\n    // :: FormatBuffer is a class that buffer line printed on terminal\n    // :: with optional format of the text, the class also usse cache\n    // :: the options in the constructor is a function that should returns\n    // :: settings for given format, the settings may change while the terminal\n    // :: is running, that's why they are dynamic in form of a function\n    // -------------------------------------------------------------------------\n    function FormatBuffer(options) {\n        this._options = options;\n        if ('Map' in root) {\n            this._format_cache = new Map();\n        }\n        this._output_buffer = [];\n    }\n    // -------------------------------------------------------------------------\n    FormatBuffer.NEW_LINE = 1;\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.format = function format(arg, newline, raw) {\n        var use_cache = this._format_cache && this._settings.useCache;\n\n        if (use_cache) {\n            var args = JSON.stringify([arg, this._settings]);\n            if (this._format_cache.has(args)) {\n                return this._format_cache.get(args);\n            }\n        }\n        var data = {\n            line: $.terminal.format(\n                arg,\n                this._settings\n            ),\n            raw: raw,\n            newline: newline\n        };\n        if (use_cache) {\n            this._format_cache.set(args, data);\n        }\n        return data;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.empty = function() {\n        return !this._output_buffer.length;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.append = function(arg, index, options, raw) {\n        this._settings = $.extend({\n            useCache: true\n        }, this._options(options));\n\n        this._output_buffer.push(FormatBuffer.NEW_LINE);\n\n        if (arg instanceof Array) {\n            var raw_lines = raw.split('\\n');\n            for (var i = 0, len = arg.length; i < len; ++i) {\n                if (arg[i] === '' || arg[i] === '\\r') {\n                    this._output_buffer.push({line: '', raw: ''});\n                } else {\n                    var formatted = this.format(arg[i], i === len - 1, raw_lines[i]);\n                    this._output_buffer.push(formatted);\n                }\n            }\n        } else if (!options.raw) {\n            this._output_buffer.push(this.format(arg, false, raw));\n        } else {\n            this._output_buffer.push({line: arg, raw: raw});\n        }\n        this._output_buffer.push({\n            finalize: options.finalize,\n            index: index,\n            newline: options.newline\n        });\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.clear_cache = function() {\n        if (this._format_cache) {\n            this._format_cache.clear();\n        }\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.output = function() {\n        return this._output_buffer.slice();\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.is_empty = function() {\n        return !this._output_buffer.length;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.clear = function() {\n        this._output_buffer = [];\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.forEach = function(fn) {\n        var i = 0;\n        while (i < this._output_buffer.length) {\n            var data = this._output_buffer[i++];\n            if (data === FormatBuffer.NEW_LINE) {\n                fn();\n            } else {\n                fn(data);\n            }\n        }\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.flush = function(render) {\n        this.forEach(render);\n        this.clear();\n    };\n    // -------------------------------------------------------------------------\n    // :: function that handle all cases of prompt and call the function set\n    // :: with a string\n    // -------------------------------------------------------------------------\n    function with_prompt(prompt, set, context) {\n        function error(e) {\n            var prompt = $.terminal.escape_brackets('[ERR]> ');\n            set('[[;red;]' + prompt + ']');\n            alert_exception('Prompt', e);\n        }\n        function done(prompt) {\n            set(prompt);\n            deferred.resolve();\n        }\n        var deferred = new $.Deferred();\n        switch (typeof prompt) {\n            case 'string':\n                done(prompt);\n                break;\n            case 'function':\n                try {\n                    var ret = prompt.call(context, function(string) {\n                        done(string);\n                    });\n                    if (typeof ret === 'string') {\n                        done(ret);\n                    }\n                    if (ret && ret.then) {\n                        ret.then(done).catch(error);\n                    }\n                } catch (e) {\n                    error(e);\n                }\n                break;\n        }\n        return deferred.promise();\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            mobileDelete: is_mobile,\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            mobileIngoreAutoSpace: [],\n            repeatTimeoutKeys: [],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        function mobile_ignore_key(key) {\n            return settings.mobileIngoreAutoSpace.length &&\n                settings.mobileIngoreAutoSpace.indexOf(key) !== -1 && is_android;\n        }\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        var wrapper = $('<div class=\"cmd-wrapper\"/>').appendTo(self);\n        wrapper.append('<span class=\"cmd-prompt\"></span>');\n        wrapper.append('<div class=\"cmd-cursor-line\">' +\n                       '<span></span>' +\n                       '<span class=\"cmd-cursor\">' +\n                       '<span data-text class=\"end\"><span>&nbsp;</span></span>' +\n                       '</span>' +\n                       '<span></span>' +\n                       '</div>');\n        var cursor_line = wrapper.find('.cmd-cursor-line');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(cursor_line);\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip;\n        if (is_mobile) {\n            clip = (function() {\n                var $node = $('<div class=\"cmd-editable\" ' +\n                              'contenteditable=\"plaintext-only\" ' +\n                              'spellcheck=\"false\"/>').attr({\n                    autocapitalize: 'off',\n                    autocorrect: 'off',\n                    spellcheck: 'false',\n                    tabindex: settings.tabindex\n                }).insertAfter(self);\n                $node.on('focus', function() {\n                    self.enable();\n                }).on('blur', function() {\n                    self.disable();\n                });\n                var timer;\n                var clip = {\n                    $node: $node,\n                    val: function(value) {\n                        if (typeof value === 'undefined') {\n                            return $node.text();\n                        } else {\n                            $node.html(value);\n                        }\n                    },\n                    reset: function() {\n                        clearTimeout(timer);\n                        timer = setTimeout(function() {\n                            $node.css({\n                                top: '',\n                                bottom: ''\n                            });\n                        }, 400);\n                    },\n                    focus: function() {\n                        css($node[0], {\n                            top: 'calc(var(--terminal-scroll, 0) * 1px)'\n                        });\n                        clip.reset();\n                    },\n                    blur: function() {\n                        $node.css({\n                            top: '100%',\n                            bottom: 0\n                        }).blur();\n                        // just in case of Webkit bug\n                        window.getSelection().removeAllRanges();\n                        clip.reset();\n                    }\n                };\n                return clip;\n            })();\n            self.addClass('cmd-mobile');\n        } else {\n            clip = (function() {\n                var id = generate_id();\n                var $node = $('<textarea>').attr({\n                    autocapitalize: 'off',\n                    spellcheck: 'false',\n                    id: id,\n                    tabindex: settings.tabindex\n                }).addClass('cmd-clipboard').appendTo(self);\n                // some a11y to make lighthouse happy\n                $node.before('<label class=\"visually-hidden\" for=\"' + id + '\">' +\n                             'Clipbard textarea for jQuery Terminal</label>');\n                return {\n                    $node: $node,\n                    val: function(value) {\n                        // even if value is undeifned\n                        // when calling val(value) it return jQuery object\n                        if (typeof value === 'undefined') {\n                            return $node.val();\n                        } else {\n                            return $node.val(value);\n                        }\n                    }\n                };\n            })();\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var just_prompt_len;\n        var extra_prompt_margin = 0;\n        var prompt_len;\n        var prompt_node = self.find('.cmd-prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cmd-cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        // use \\uFFFF to mark newline extra character\n        // so we can hide it by css when using text selection\n        var line_marker = '\\uFFFF';\n        var line_marker_re = /\\uFFFF$/;\n        var empty_marker_re = /^\\uFFFF$/;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span,img,a')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.cmd-prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.next().length;\n                return node.find('[data-text]').length +\n                    node.prevUntil('.cmd-prompt').find('[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ArrowUP',\n            'DOWN': 'ArrowDown',\n            'LEFT': 'ArrowLeft',\n            'RIGHT': 'ArrowRight',\n            'DEL': 'Delete',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function ie_key_fix(e) {\n            var key = e.key.toUpperCase();\n            if (key_mapping[key]) {\n                return key_mapping[key];\n            }\n            return key;\n        }\n        function get_key(e) {\n            if (e.key) {\n                var key = ie_key_fix(e).toUpperCase();\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (is_array(keycodes[which])) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_forward({clipboard: true}),\n            'HOLD+ALT+D': delete_forward({clipboard: true, hold: true}),\n            'HOLD+DELETE': delete_forward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+DELETE': delete_forward({clipboard: false, hold: true}),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                // fix scroll the page where there is no scrollbar\n                clip.$node.blur();\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    if (promise && is_function(promise.then)) {\n                        promise.then(draw_prompt);\n                    } else {\n                        draw_prompt();\n                    }\n                }\n                self.set('');\n                clip.val('');\n                clip.$node.focus();\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'HOLD+ARROWUP': up_arrow,\n            'ARROWUP': up_arrow,\n            'CTRL+ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': down_arrow,\n            'HOLD+ARROWDOWN': down_arrow,\n            'CTRL+N': next_history,\n            'CTRL+ARROWDOWN': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': debounce(left, 10),\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': debounce(right, 10),\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(bare_text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_backward({clipboard: true, hold: false}),\n            'HOLD+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': function() {\n                return get_selected_html() === '';\n            },\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_forward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_forward() {\n                    self['delete'](1);\n                    return false;\n                };\n            }\n            return function delete_word_forward() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (options.clipboard) {\n                        text_to_clipboard(clip.$node, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_backward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_backward() {\n                    self['delete'](-1);\n                };\n            }\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]* *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (options.clipboard) {\n                            text_to_clipboard(clip.$node, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.$node.is(':focus')) {\n                clip.$node.trigger('focus', [true]);\n            }\n            clip.$node.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val().replace(/\\r/g, '');\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            if (history.end()) {\n                first_up_history = true;\n                self.set(last_command);\n            } else {\n                self.set(history.next());\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function have_newlines(string) {\n            return string.match(/\\n/);\n        }\n        // -------------------------------------------------------------------------------\n        function have_wrapping(string, prompt_len) {\n            var lengths = string.split('\\n').map(function(line) {\n                return $.terminal.length(line);\n            });\n            if (prompt_len) {\n                lengths[0] += prompt_len;\n            }\n            var wrap = lengths.filter(function(len) {\n                return len >= num_chars;\n            });\n            return !!wrap.length;\n        }\n        // -------------------------------------------------------------------------------\n        function simple_split_command_line(formatted) {\n            var prompt = last_rendered_prompt;\n            var lines = $.terminal.split_equal(prompt + formatted, num_chars);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            lines = lines.map($.terminal.unescape_brackets);\n            lines[0] = lines[0].replace(re, '');\n            return lines;\n        }\n        // -------------------------------------------------------------------------------\n        function up_arrow() {\n            var formatted = formatting(command);\n            formatted = $.terminal.strip(formatted);\n            var before = $.terminal.substring(formatted, 0, position);\n            var col = self.column();\n            var cursor_line = self.find('.cmd-cursor-line');\n            var line = cursor_line.prevUntil('span').length;\n            // case when line is wrapped and we are below prompt\n            if (line === 1 && col <= prompt_len) {\n                self.position(0);\n                return false;\n            }\n            if (line === 0) {\n                return prev_history();\n            }\n            if (have_newlines(before) || have_wrapping(before, prompt_len)) {\n                var prev = cursor_line.prev();\n                var splitted = prev.is('.cmd-end-line');\n                var lines = simple_split_command_line(formatted);\n                prev = lines[line - 1];\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                if (left_over > 0) {\n                    diff = col;\n                    if (line - 1 === 0) {\n                        diff -= prompt_len;\n                    }\n                    diff = col + prev.substring(diff).length;\n                    if (splitted) {\n                        ++diff;\n                    }\n                } else {\n                    diff = col + 1;\n                }\n                self.position(-diff, true);\n                return false;\n            } else {\n                return prev_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function down_arrow() {\n            // use format and strip so we get visual strings (formatting can change text)\n            var formatted = formatting(command);\n            formatted = $.terminal.strip(formatted);\n            var after = $.terminal.substring(formatted, position);\n            if (have_newlines(after) || have_wrapping(after)) {\n                var lines = simple_split_command_line(formatted);\n                var col = self.column();\n                var cursor_line = self.find('.cmd-cursor-line');\n                var $line = cursor_line.prevUntil('span');\n                var line = $line.length;\n                var ending = cursor_line.is('.cmd-end-line');\n                var next_broken = cursor_line.next().is('.cmd-end-line');\n                var next = lines[line + 1];\n                if (!next) {\n                    return next_history();\n                }\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                // move to next line if at the end move to end of next line\n                if (left_over === 0) {\n                    diff = next.length;\n                    if (next_broken) {\n                        diff++;\n                    }\n                } else {\n                    diff = Math.min(col, next.length) + left_over;\n                    if (line === 0) {\n                        diff += prompt_len;\n                    }\n                    if (ending) {\n                        // correction for splitted line that don't have extra space\n                        diff += 1;\n                    }\n                }\n                self.position(diff, true);\n                return false;\n            } else {\n                return next_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < bare_text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var $clip = clip.$node;\n            var focus = $clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!$clip.is(':focus') && enabled) {\n                        $clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && !enabled) {\n                $clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                _class = _class.replace(/\\s+/g, ' ');\n                if (_class !== self.attr('class').replace(/\\s+/g, ' ')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            var pos = !is_mobile ? position + 1 : position;\n                            // we check first to improve performance\n                            if (clip.$node.caret() !== pos) {\n                                clip.$node.caret(pos);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('cmd-blink');\n                } else {\n                    cursor.removeClass('cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('cmd-inverted cmd-blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('cmd-inverted cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('cmd-inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.cmd-prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function process_cmd_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            // -----------------------------------------------------------------\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                var result = [];\n                array.forEach(function(line, i) {\n                    if ($.terminal.strip(line).match(empty_marker_re)) {\n                        result[i] = false;\n                        // lines that will get removed need line ending on previos\n                        // line so code that check that marker works correctly\n                        if (i > 0) {\n                            result[i - 1] += line_marker;\n                        }\n                    } else {\n                        result[i] = array[i];\n                    }\n                });\n                return result.filter(function(line) {\n                    return line !== false;\n                });\n            }\n            // -----------------------------------------------------------------\n            var line = prompt_node.find('.cmd-line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.cmd-line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += line_marker;\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1) {\n                var len = $.terminal.length(array[array.length - 1]);\n                if (len === num_chars) {\n                    array.push('');\n                }\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        var cmd_line_worker = new WorkerCache({\n            validation: function(key) {\n                var result = false;\n                if ((!this._previous_value || this._previous_value === key) &&\n                    (!this._cols || this._cols === num_chars)) {\n                    result = true;\n                }\n                this._previous_value = key;\n                this._cols = num_chars;\n                return result;\n            },\n            action: process_cmd_line\n        });\n        // ---------------------------------------------------------------------\n        function split_command_line(string) {\n            return cmd_line_worker.get(string);\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var format_options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position,\n                    command: true\n                });\n                var formatted = $.terminal.apply_formatters(string, format_options);\n                var output = $.terminal.normalize(formatted[0]);\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            //string = $.terminal.normalize(string);\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            return $.terminal.format(encoded, {\n                charWidth: settings.charWidth,\n                allowedAttributes: settings.allowedAttributes || []\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            return $.terminal.partition(string).join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str, raw) {\n            return $.terminal.length(str, raw);\n        }\n        // ---------------------------------------------------------------------\n        function is_multiline(str) {\n            return strlen(text(str)) > num_chars - prompt_len - 1 ||\n                str.match(/\\n/);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that check if string is valid emoji formatting\n        // ---------------------------------------------------------------------\n        function is_emoji_formatting(str) {\n            if ($.terminal.is_formatting(str)) {\n                return str.replace(format_parts_re, '$4').match(/^emoji /);\n            }\n            return false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var end_line = string.match(line_marker_re);\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                }\n                cursor_line.toggleClass('cmd-end-line', !!end_line);\n                var cursor_end_line = false;\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    c = '&nbsp;';\n                    empty_cursor();\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        cursor_end_line = true;\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                if (ch_unit_bug) {\n                    if (typeof wcwidth !== 'undefined') {\n                        // handle emoji and wide characters in IE or\n                        // other possible browsers that don't have valid ch unit\n                        var size = strlen(text(c));\n                        if (size === 1 && is_emoji_formatting(c)) {\n                            size = 2;\n                        }\n                        cursor.width(char_width * size);\n                    } else {\n                        cursor.width(char_width);\n                    }\n                }\n                cursor.toggleClass('cmd-end-line', cursor_end_line);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            // -----------------------------------------------------------------\n            function div(string, before) {\n                var end_line = string.match(line_marker_re);\n                var result = '<div role=\"presentation\" aria-hidden=\"true\"';\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                    result += ' class=\"cmd-end-line\"';\n                }\n                result += '>' + format(string, before || '') + '</div>';\n                return result;\n            }\n            // -----------------------------------------------------------------\n            function empty_cursor() {\n                // data-text is for consistency in CSS and end class is for unit tests\n                cursor.html('<span data-text class=\"end\"><span>&nbsp;<span></span>');\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                wrapper.css({\n                    display: 'none'\n                });\n                wrapper.find('div:not(.cmd-cursor-line)').remove();\n                before.html('');\n                if (is_multiline(formatted)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = split_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cmd-cursor-line ~ div:last-of-type')\n                        .append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    empty_cursor();\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.cmd-prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.$node.css('top', in_line * 14 + 'px');\n                }\n                wrapper.css({\n                    display: ''\n                });\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function make_guess(string, position) {\n                var opts = $.extend({}, settings, {\n                    position: position,\n                    command: true\n                });\n                return $.terminal.apply_formatters(string, opts)[1];\n            }\n            function cmp(search_pos, pos, string) {\n                var guess = make_guess(string, pos);\n                if (guess === search_pos) {\n                    var next_guess = make_guess(string, pos + 1);\n                    if (next_guess > search_pos) {\n                        return 0;\n                    }\n                    return 1;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = bare_text(string);\n                var codepoint_len = string.length;\n                var str = $.terminal.escape_brackets(command);\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp, [str]);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var prev_prompt_data;\n        var draw_prompt = (function() {\n            function format_prompt(prompt) {\n                if (!prompt) {\n                    just_prompt_len = 0;\n                    prompt_len = just_prompt_len + extra_prompt_margin;\n                    return prompt;\n                }\n                var lines = $.terminal.split_equal(prompt, num_chars).map(function(line) {\n                    if (!$.terminal.have_formatting(line)) {\n                        return '[[;;]' + $.terminal.escape_brackets(line) + ']';\n                    }\n                    return $.terminal.format_split(line).map(function(str) {\n                        if ($.terminal.is_formatting(str)) {\n                            return str;\n                        }\n                        return '[[;;]' + $.terminal.escape_brackets(str) + ']';\n                    }).join('');\n                });\n                var options = {\n                    charWidth: settings.charWidth\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                just_prompt_len = strlen(text(encoded_last_line));\n                prompt_len = just_prompt_len + extra_prompt_margin;\n                return lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"cmd-line\">' +\n                           $.terminal.format(line, options) +\n                           '</span>';\n                }).concat([last_line]).join('\\n');\n            }\n            function set(prompt) {\n                if (prompt) {\n                    prompt = $.terminal.apply_formatters(prompt, {prompt: true});\n                    prompt = $.terminal.normalize(prompt);\n                    prompt = crlf(prompt);\n                }\n                var formatted = format_prompt(prompt);\n                last_rendered_prompt = prompt;\n                // zero width space to make sure prompt margin takes up space,\n                // so that echo with newline: false works when prompt is empty\n                formatted = formatted || $.terminal.format('[[;;]\\u200b]');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    // fix for Chrome bug width selection\n                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1087787\n                    var spans = prompt_node.find('> span span');\n                    clip.$node.attr('data-cmd-prompt', prompt_node.text());\n                    if (is_ch_unit_supported) {\n                        prompt_node.hide();\n                        spans.each(function() {\n                            var self = $(this);\n                            var len = strlen(self.text());\n                            if (len === 0) {\n                                self.css('width', 1);\n                            } else {\n                                self.css('width', len + 'ch');\n                            }\n                        });\n                        prompt_node.show();\n                    }\n                }\n            }\n            return function() {\n                // the data is used as cancelable reference because we have ref\n                // data object that is hold in closure and we remove `set` function\n                // so previous call to function prompt will be ignored\n                if (prev_prompt_data && prev_prompt_data.set) {\n                    prev_prompt_data.set = $.noop;\n                    // remove reference for garbage collector\n                    prev_prompt_data = null;\n                }\n                var data = prev_prompt_data = {\n                    set: set\n                };\n                with_prompt(prompt, function(prompt) {\n                    data.set(prompt);\n                }, self);\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = bare_text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = string;\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = string;\n                    if (!stay) {\n                        self.position(bare_text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (new_keymap === null) {\n                    keymap = default_keymap;\n                    return self;\n                } else if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = bare_text(command);\n                var len = bare_text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = string;\n                if (!stay) {\n                    self.position(len, true, true);\n                }\n                fix_textarea();\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cmd-wrapper').remove();\n                self.find('.cmd-prompt, .cmd-clipboard, .cmd-editable').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            column: function(include_prompt) {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                var re = /\\n?([^\\n]*)$/;\n                var match = before.match(re);\n                var col = match[1].length;\n                if (!have_newlines(before) &&\n                    (include_prompt || have_wrapping(before, prompt_len))) {\n                    col += prompt_len;\n                }\n                if (col === 0) {\n                    return col;\n                }\n                col %= num_chars;\n                if (col === 0) {\n                    return num_chars;\n                }\n                return col;\n            },\n            line: function() {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                return before.split(/\\n/).length - 1;\n            },\n            // inform cursor about size of partial output line\n            __set_prompt_margin: function(len) {\n                extra_prompt_margin = len;\n                prompt_len = just_prompt_len + extra_prompt_margin;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    var should_redraw = user_prompt !== prompt;\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    if (should_redraw) {\n                        draw_prompt();\n                        // we could check if command is longer then numchars-new\n                        // prompt\n                        redraw();\n                    }\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = bare_text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position) {\n                        redraw();\n                        if (!silent && is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                fix_textarea(true);\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    // double escape\n                    var string = formatting($.terminal.escape_formatting(command), true);\n                    var len = length(string);\n                    var command_len = bare_text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (len === command_len) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                var new_num_chars;\n                if (typeof num === 'number') {\n                    new_num_chars = num;\n                } else {\n                    new_num_chars = get_num_chars(char_width);\n                }\n                if (num_chars !== new_num_chars || arguments[0] === true) {\n                    num_chars = new_num_chars;\n                    redraw();\n                    draw_prompt();\n                }\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                if (!enabled) {\n                    warn('invoke_key(\"' + shortcut + '\") called on disabled terminal');\n                }\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            clip: function() {\n                return clip;\n            },\n            enable: function(silent) {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (!clip.$node.is(':focus')) {\n                            clip.$node.focus();\n                        }\n                        clip.$node.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE - ignore\n                    }\n                    animation(true);\n                    if (!silent && is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (settings.prompt !== false) {\n            prompt = settings.prompt;\n            draw_prompt();\n        }\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // skip_keypress - hack for Android that was inserting characters on\n        // backspace\n        var skip_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        var prev_key;\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function is_delay_key(key) {\n            var specials = ['HOLD+SHIFT+BACKSPACE', 'HOLD+BACKSPACE'];\n            return specials.indexOf(key) !== -1 && settings.mobileDelete ||\n                settings.repeatTimeoutKeys.indexOf(key) !== -1;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        var skip_keydown = false;\n        // ---------------------------------------------------------------------\n        // function complexicity is 35 when adding this exception\n        // eslint-disable-next-line complexity\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            var result;\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            // meta and os are special keydown triggered by Emoji picker on Windows 10\n            // meta is in Google Chrome is is in Firefox\n            if (!e.fake && ['meta', 'os'].indexOf(e.key.toLowerCase()) === -1) {\n                no_keydown = false;\n            }\n            no_keypress = true;\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.$node.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                e.key = ie_key_fix(e);\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //skip_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (key !== prev_key) {\n                clear_hold();\n            }\n            // CTRL+C hanlding is only exception of cmd aware terminal logic\n            // cmd need to call CTRL+C keymap when terminal is not enabled\n            if (enabled || (key === 'CTRL+C' && is_terminal_selected(self))) {\n                if (hold) {\n                    prev_key = key;\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 && is_delay_key(key)) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                } else {\n                    self.oneTime(settings.holdTimeout, 'hold', function() {\n                        hold = true;\n                    });\n                    prev_key = key;\n                }\n                // if e.fake ignore of space is handled in input and next keydown\n                // is not triggered this is just in case code since on Android\n                // keydown is not triggered only input so event is always fake on Android\n                if (!e.fake && is_android) {\n                    if (skip_keydown) {\n                        clear_hold();\n                        skip_keydown = false;\n                        return false;\n                    }\n                    if (mobile_ignore_key(key)) {\n                        skip_keydown = true;\n                    } else if (mobile_ignore_key(prev_key)) {\n                        // just in case next key is different then space\n                        skip_keydown = false;\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                // only enter will reset history (and down arrow on last command)\n                if (key.toLowerCase() === 'enter') {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    skip_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //skip_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            self.stopTime('delay');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (skip_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        var skip_input = false;\n        function finalize_input_event() {\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if (no_keydown || process || ((no_keypress || dead_key) &&\n                                          !skip_insert &&\n                                          (single_key || no_key) && !backspace)) {\n                if (val && val === command) {\n                    if (is_android) {\n                        // ignore autocomplete on GBoard keyboard #693\n                        if (no_keydown) {\n                            event('keydown', 'Enter', 13);\n                        }\n                    }\n                    finalize_input_event();\n                    return;\n                }\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (skip_input) {\n                    skip_input = false;\n                    clip.val(command);\n                    return;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var str = val.slice(position);\n                    if (str.length === 1 || backspace) {\n                        // original not optimized function called once\n                        var chr = get_next_character(str);\n                        if (mobile_ignore_key(chr)) {\n                            skip_input = true;\n                        }\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = str.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : str, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, str.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            finalize_input_event();\n        }\n        doc.bind('keypress.cmd', keypress_event);\n        doc.bind('keydown.cmd', keydown_event);\n        doc.bind('keyup.cmd', clear_hold);\n        doc.bind('input.cmd', input_event);\n        (function() {\n            if (is_mobile) {\n                $(self[0]).add(clip.$node).on('touchstart.cmd', function() {\n                    if (!self.isenabled()) {\n                        clip.focus();\n                    } else {\n                        clip.blur();\n                    }\n                });\n                self.disable();\n                return;\n            }\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    var is_prompt = $target.is('.cmd-prompt');\n                    if (!is_prompt && down && get_selected_html() === '') {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_html() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                // fix empty prompt that use 0 width space\n                string = string.replace(/\\u200B/g, '');\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function count_selfclosing_formatting(string) {\n        var count = 0;\n        if ($.terminal.have_formatting(string)) {\n            var re = new RegExp(format_parts_re.source, 'i'); // without g flag\n            $.terminal.format_split(string).forEach(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    var m = str.match(re);\n                    if (m && m[1].match(/@/) && m[6] === '') {\n                        count++;\n                    }\n                }\n            });\n        }\n        return count;\n    }\n    // -------------------------------------------------------------------------\n    // entiteis are case sensitive\n    // generated from https://www.freeformatter.com/html-entities.html\n    // -------------------------------------------------------------------------\n    var entities = {\n        \"&amp;\": \"&\",\n        \"&lt;\": \"<\",\n        \"&gt;\": \">\",\n        \"&Agrave;\": \"À\",\n        \"&Aacute;\": \"Á\",\n        \"&Acirc;\": \"Â\",\n        \"&Atilde;\": \"Ã\",\n        \"&Auml;\": \"Ä\",\n        \"&Aring;\": \"Å\",\n        \"&AElig;\": \"Æ\",\n        \"&Ccedil;\": \"Ç\",\n        \"&Egrave;\": \"È\",\n        \"&Eacute;\": \"É\",\n        \"&Ecirc;\": \"Ê\",\n        \"&Euml;\": \"Ë\",\n        \"&Igrave;\": \"Ì\",\n        \"&Iacute;\": \"Í\",\n        \"&Icirc;\": \"Î\",\n        \"&Iuml;\": \"Ï\",\n        \"&ETH;\": \"Ð\",\n        \"&Ntilde;\": \"Ñ\",\n        \"&Ograve;\": \"Ò\",\n        \"&Oacute;\": \"Ó\",\n        \"&Ocirc;\": \"Ô\",\n        \"&Otilde;\": \"Õ\",\n        \"&Ouml;\": \"Ö\",\n        \"&Oslash;\": \"Ø\",\n        \"&Ugrave;\": \"Ù\",\n        \"&Uacute;\": \"Ú\",\n        \"&Ucirc;\": \"Û\",\n        \"&Uuml;\": \"Ü\",\n        \"&Yacute;\": \"Ý\",\n        \"&THORN;\": \"Þ\",\n        \"&szlig;\": \"ß\",\n        \"&agrave;\": \"à\",\n        \"&aacute;\": \"á\",\n        \"&acirc;\": \"â\",\n        \"&atilde;\": \"ã\",\n        \"&auml;\": \"ä\",\n        \"&aring;\": \"å\",\n        \"&aelig;\": \"æ\",\n        \"&ccedil;\": \"ç\",\n        \"&egrave;\": \"è\",\n        \"&eacute;\": \"é\",\n        \"&ecirc;\": \"ê\",\n        \"&euml;\": \"ë\",\n        \"&igrave;\": \"ì\",\n        \"&iacute;\": \"í\",\n        \"&icirc;\": \"î\",\n        \"&iuml;\": \"ï\",\n        \"&eth;\": \"ð\",\n        \"&ntilde;\": \"ñ\",\n        \"&ograve;\": \"ò\",\n        \"&oacute;\": \"ó\",\n        \"&ocirc;\": \"ô\",\n        \"&otilde;\": \"õ\",\n        \"&ouml;\": \"ö\",\n        \"&oslash;\": \"ø\",\n        \"&ugrave;\": \"ù\",\n        \"&uacute;\": \"ú\",\n        \"&ucirc;\": \"û\",\n        \"&uuml;\": \"ü\",\n        \"&yacute;\": \"ý\",\n        \"&thorn;\": \"þ\",\n        \"&yuml;\": \"ÿ\",\n        \"&nbsp;\": \" \",\n        \"&iexcl;\": \"¡\",\n        \"&cent;\": \"¢\",\n        \"&pound;\": \"£\",\n        \"&curren;\": \"¤\",\n        \"&yen;\": \"¥\",\n        \"&brvbar;\": \"¦\",\n        \"&sect;\": \"§\",\n        \"&uml;\": \"¨\",\n        \"&copy;\": \"©\",\n        \"&ordf;\": \"ª\",\n        \"&laquo;\": \"«\",\n        \"&not;\": \"¬\",\n        \"&shy;\": \"­\",\n        \"&reg;\": \"®\",\n        \"&macr;\": \"¯\",\n        \"&deg;\": \"°\",\n        \"&plusmn;\": \"±\",\n        \"&sup2;\": \"²\",\n        \"&sup3;\": \"³\",\n        \"&acute;\": \"´\",\n        \"&micro;\": \"µ\",\n        \"&para;\": \"¶\",\n        \"&cedil;\": \"¸\",\n        \"&sup1;\": \"¹\",\n        \"&ordm;\": \"º\",\n        \"&raquo;\": \"»\",\n        \"&frac14;\": \"¼\",\n        \"&frac12;\": \"½\",\n        \"&frac34;\": \"¾\",\n        \"&iquest;\": \"¿\",\n        \"&times;\": \"×\",\n        \"&divide;\": \"÷\",\n        \"&forall;\": \"∀\",\n        \"&part;\": \"∂\",\n        \"&exist;\": \"∃\",\n        \"&empty;\": \"∅\",\n        \"&nabla;\": \"∇\",\n        \"&isin;\": \"∈\",\n        \"&notin;\": \"∉\",\n        \"&ni;\": \"∋\",\n        \"&prod;\": \"∏\",\n        \"&sum;\": \"∑\",\n        \"&minus;\": \"−\",\n        \"&lowast;\": \"∗\",\n        \"&radic;\": \"√\",\n        \"&prop;\": \"∝\",\n        \"&infin;\": \"∞\",\n        \"&ang;\": \"∠\",\n        \"&and;\": \"∧\",\n        \"&or;\": \"∨\",\n        \"&cap;\": \"∩\",\n        \"&cup;\": \"∪\",\n        \"&int;\": \"∫\",\n        \"&there4;\": \"∴\",\n        \"&sim;\": \"∼\",\n        \"&cong;\": \"≅\",\n        \"&asymp;\": \"≈\",\n        \"&ne;\": \"≠\",\n        \"&equiv;\": \"≡\",\n        \"&le;\": \"≤\",\n        \"&ge;\": \"≥\",\n        \"&sub;\": \"⊂\",\n        \"&sup;\": \"⊃\",\n        \"&nsub;\": \"⊄\",\n        \"&sube;\": \"⊆\",\n        \"&supe;\": \"⊇\",\n        \"&oplus;\": \"⊕\",\n        \"&otimes;\": \"⊗\",\n        \"&perp;\": \"⊥\",\n        \"&sdot;\": \"⋅\",\n        \"&Alpha;\": \"Α\",\n        \"&Beta;\": \"Β\",\n        \"&Gamma;\": \"Γ\",\n        \"&Delta;\": \"Δ\",\n        \"&Epsilon;\": \"Ε\",\n        \"&Zeta;\": \"Ζ\",\n        \"&Eta;\": \"Η\",\n        \"&Theta;\": \"Θ\",\n        \"&Iota;\": \"Ι\",\n        \"&Kappa;\": \"Κ\",\n        \"&Lambda;\": \"Λ\",\n        \"&Mu;\": \"Μ\",\n        \"&Nu;\": \"Ν\",\n        \"&Xi;\": \"Ξ\",\n        \"&Omicron;\": \"Ο\",\n        \"&Pi;\": \"Π\",\n        \"&Rho;\": \"Ρ\",\n        \"&Sigma;\": \"Σ\",\n        \"&Tau;\": \"Τ\",\n        \"&Upsilon;\": \"Υ\",\n        \"&Phi;\": \"Φ\",\n        \"&Chi;\": \"Χ\",\n        \"&Psi;\": \"Ψ\",\n        \"&Omega;\": \"Ω\",\n        \"&alpha;\": \"α\",\n        \"&beta;\": \"β\",\n        \"&gamma;\": \"γ\",\n        \"&delta;\": \"δ\",\n        \"&epsilon;\": \"ε\",\n        \"&zeta;\": \"ζ\",\n        \"&eta;\": \"η\",\n        \"&theta;\": \"θ\",\n        \"&iota;\": \"ι\",\n        \"&kappa;\": \"κ\",\n        \"&lambda;\": \"λ\",\n        \"&mu;\": \"μ\",\n        \"&nu;\": \"ν\",\n        \"&xi;\": \"ξ\",\n        \"&omicron;\": \"ο\",\n        \"&pi;\": \"π\",\n        \"&rho;\": \"ρ\",\n        \"&sigmaf;\": \"ς\",\n        \"&sigma;\": \"σ\",\n        \"&tau;\": \"τ\",\n        \"&upsilon;\": \"υ\",\n        \"&phi;\": \"φ\",\n        \"&chi;\": \"χ\",\n        \"&psi;\": \"ψ\",\n        \"&omega;\": \"ω\",\n        \"&thetasym;\": \"ϑ\",\n        \"&upsih;\": \"ϒ\",\n        \"&piv;\": \"ϖ\",\n        \"&OElig;\": \"Œ\",\n        \"&oelig;\": \"œ\",\n        \"&Scaron;\": \"Š\",\n        \"&scaron;\": \"š\",\n        \"&Yuml;\": \"Ÿ\",\n        \"&fnof;\": \"ƒ\",\n        \"&circ;\": \"ˆ\",\n        \"&tilde;\": \"˜\",\n        \"&ensp;\": \" \",\n        \"&emsp;\": \" \",\n        \"&thinsp;\": \" \",\n        \"&zwnj;\": \"‌\",\n        \"&zwj;\": \"‍\",\n        \"&lrm;\": \"‎\",\n        \"&rlm;\": \"‏\",\n        \"&ndash;\": \"–\",\n        \"&mdash;\": \"—\",\n        \"&lsquo;\": \"‘\",\n        \"&rsquo;\": \"’\",\n        \"&sbquo;\": \"‚\",\n        \"&ldquo;\": \"“\",\n        \"&rdquo;\": \"”\",\n        \"&bdquo;\": \"„\",\n        \"&dagger;\": \"†\",\n        \"&Dagger;\": \"‡\",\n        \"&bull;\": \"•\",\n        \"&hellip;\": \"…\",\n        \"&permil;\": \"‰\",\n        \"&prime;\": \"′\",\n        \"&Prime;\": \"″\",\n        \"&lsaquo;\": \"‹\",\n        \"&rsaquo;\": \"›\",\n        \"&oline;\": \"‾\",\n        \"&euro;\": \"€\",\n        \"&trade;\": \"™\",\n        \"&larr;\": \"←\",\n        \"&uarr;\": \"↑\",\n        \"&rarr;\": \"→\",\n        \"&darr;\": \"↓\",\n        \"&harr;\": \"↔\",\n        \"&crarr;\": \"↵\",\n        \"&lceil;\": \"⌈\",\n        \"&rceil;\": \"⌉\",\n        \"&lfloor;\": \"⌊\",\n        \"&rfloor;\": \"⌋\",\n        \"&loz;\": \"◊\",\n        \"&spades;\": \"♠\",\n        \"&clubs;\": \"♣\",\n        \"&hearts;\": \"♥\",\n        \"&diams;\": \"♦\"\n    };\n    // -------------------------------------------------------------------------\n    function render_entities(str) {\n        return str.replace(/&#(x?)([0-9]+);/g, function(_, hex, code) {\n            code = parseInt(code, hex ? 16 : 10);\n            return String.fromCharCode(code);\n        }).replace(/(&[^;]+;)/g, function(_, entity) {\n            return entities[entity] || entity;\n        });\n    }\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return render_entities(safe(string));\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    function make_re_fn(re) {\n        return function(string) {\n            var m = string.match(re);\n            if (starts_with(m)) {\n                return m[1];\n            }\n        };\n    }\n    // -------------------------------------------------------------------------\n    function starts_with(match) {\n        return match && match.index === 0;\n    }\n    // -------------------------------------------------------------------------\n    // :: optimized higher order function that it check complex regexes\n    // :: only when bigger string match those regexes, function is always\n    // :: used in loop when you process whole string, it's used to create local\n    // :: get_next_character function only cmd in input use original\n    // :: not optimized function\n    // -------------------------------------------------------------------------\n    function make_next_char_fun(string) {\n        var tests = [];\n        [\n            entity_re,\n            emoji_re,\n            combine_chr_re\n        ].forEach(function(re) {\n            if (string.match(re)) {\n                tests.push(make_re_fn(re));\n            }\n        });\n        if (string.match(astral_symbols_re)) {\n            tests.push(function(string) {\n                var m1 = string.match(astral_symbols_re);\n                if (starts_with(m1)) {\n                    var m2 = string.match(combine_chr_re);\n                    if (m2 && m2.index === 1) {\n                        return string.slice(0, 3);\n                    }\n                    return m1[1];\n                }\n            });\n        }\n        return function(string) {\n            for (var i = 0; i < tests.length; ++i) {\n                var test = tests[i];\n                var ret = test(string);\n                if (ret) {\n                    return ret;\n                }\n            }\n            return string[0];\n        };\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_entity = string.match(entity_re);\n        if (starts_with(match_entity)) {\n            return match_entity[1];\n        }\n        var match_combo = string.match(combine_chr_re);\n        if (starts_with(match_combo)) {\n            return match_combo[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (starts_with(match_emoji)) {\n            return match_emoji[1];\n        } else if (string.charCodeAt(0) < 255) {\n            return string[0];\n        } else {\n            var astral_match = string.match(astral_symbols_re);\n            if (starts_with(astral_match)) {\n                match_combo = string.match(combine_chr_re);\n                if (match_combo && match_combo.index === 1) {\n                    return string.slice(0, 3);\n                }\n                return string.slice(0, 2);\n            } else {\n                return string[0];\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (len === 0) {\n            return 'width: 1px';\n        } else if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.charWidth) {\n                return 'width: ' + (options.charWidth * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    // options {charWidth}\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len > 1 && len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {\n                    len: strlen(chr),\n                    chr: chr\n                };\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            specs: [spec]\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            specs: last.specs.concat(spec)\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    specs: [spec],\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return make_string(spec);\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + make_string(spec) + '</span>';\n                } else if (spec.specs.length > 1) {\n                    return wrap(style, spec.specs.map(function(spec) {\n                        return wrap(char_width_prop(spec.len), spec.chr);\n                    }).join(''));\n                } else {\n                    return wrap(style, make_string(spec));\n                }\n            }).join('');\n        }\n        function make_string(spec) {\n            return spec.specs.map(function(spec) {\n                return spec.chr;\n            }).join('');\n        }\n        function wrap(style, str) {\n            return '<span style=\"' + style + '\">' + str + '</span>';\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn, more_args) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var args = [search_pos, mid].concat(more_args);\n        var cmp = compare_fn.apply(null, args);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else {\n            return -1;\n        }\n    }\n    // -----------------------------------------------------------------\n    // :: selection utilities - should work in modern browser including IE9\n    // -----------------------------------------------------------------\n    function is_terminal_selected(cmd) {\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.toString()) {\n                var node = selection.getRangeAt(0).startContainer.parentNode;\n                var term = $(node).closest('.terminal');\n                return term.length && (cmd && term.find('.cmd').is(cmd) || !cmd);\n            }\n        }\n    }\n    // -----------------------------------------------------------------\n    function get_selected_html() {\n        var html = '';\n        if (is_function(window.getSelection)) {\n            var sel = window.getSelection();\n            if (sel.rangeCount) {\n                var container = document.createElement('div');\n                for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        return html;\n    }\n    // -----------------------------------------------------------------\n    function with_selection(fn) {\n        var html = '';\n        var ranges = [];\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.rangeCount) {\n                var container = document.createElement(\"div\");\n                for (var i = 0, len = selection.rangeCount; i < len; ++i) {\n                    var range = selection.getRangeAt(i).cloneRange();\n                    ranges.push(range);\n                    container.appendChild(range.cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        fn(html);\n        if (ranges.length) {\n            selection.removeAllRanges();\n            ranges.forEach(function(range) {\n                selection.addRange(range);\n            });\n        }\n        return html !== '';\n    }\n    // -----------------------------------------------------------------\n    function process_selected_line() {\n        var $self = $(this);\n        var result = $self.text();\n        if ($self.hasClass('cmd-end-line')) {\n            result += '\\n';\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------\n    function process_div(element) {\n        // span is empty line, div is default case with text\n        return $(element).find('> div, > span')\n            .map(process_selected_line).get().join('\\n').replace(/\\n$/, '');\n    }\n    // -----------------------------------------------------------------\n    function process_selected_html(html) {\n        var stdout;\n        var text = '';\n        var $html = $('<div>' + html + '</div>');\n        if (html.match(/<\\/div>/)) {\n            // match multiple echo output\n            stdout = $html.find('div[data-index]').map(function() {\n                return process_div(this);\n            }).get().join('\\n');\n            // match inside single echo output\n            if (!stdout && html.match(/style=\"width: 100%;?\"/)) {\n                stdout = process_div($html);\n            }\n            text = stdout;\n        }\n        var $prompt = $html.find('.cmd-prompt');\n        if ($prompt.length) {\n            if (text.length) {\n                text += '\\n';\n            }\n            text += $prompt.text();\n        }\n        var $cmd_lines = $html.find('[role=\"presentation\"]');\n        if ($cmd_lines.length) {\n            text += $cmd_lines.map(process_selected_line).get().join('');\n        }\n        if (!text.length && html) {\n            text = $html.text();\n        }\n        return text.replace(/\\xA0/g, ' '); // fix &nbsp; space\n    }\n    // ---------------------------------------------------------------------\n    // :: copy given DOM element text to clipboard\n    // ---------------------------------------------------------------------\n    var support_copy = (function() {\n        if (typeof document === 'undefined') {\n            return false;\n        }\n        if (!is_function(document.queryCommandSupported)) {\n            return false;\n        }\n        return document.queryCommandSupported('copy');\n    })();\n    // ---------------------------------------------------------------------\n    var text_to_clipboard;\n    if (support_copy) {\n        text_to_clipboard = function text_to_clipboard($textarea, text) {\n            var val = $textarea.val();\n            var had_focus = $textarea.is(':focus');\n            var pos = $textarea.caret();\n            if (window.navigator && window.navigator.clipboard) {\n                navigator.clipboard.writeText(text);\n            } else if (had_focus) {\n                $textarea.val(text).focus();\n                $textarea[0].select();\n                document.execCommand('copy');\n                $textarea.val(val);\n                $textarea.caret(pos);\n            } else {\n                var $text = $('<textarea/>').css({\n                    position: 'fixed',\n                    top: 0,\n                    left: 0\n                }).appendTo('body');\n                $text.val(text).focus();\n                $text[0].select();\n                document.execCommand('copy');\n                $text.blur();\n                $text.remove();\n            }\n            return true;\n        };\n    } else {\n        text_to_clipboard = $.noop;\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        function noop() {\n            return '';\n        }\n        if (typeof document === 'undefined') {\n            return noop;\n        }\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (root.getSelection) {\n            var selection = root.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = root.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = root.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function process_command(original, fn) {\n        var string = original.trim();\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"`]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: original,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: original,\n                name: '',\n                args: [],\n                args_quotes: [],\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.31.1',\n        date: 'Thu, 06 Jan 2022 18:16:30 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        is_extended_command: function is_extended_command(str) {\n            return typeof str === 'string' &&\n                str.match(format_exec_re) &&\n                !$.terminal.is_formatting(str);\n        },\n        // ---------------------------------------------------------------------\n        each_extended_command: function(string, fn) {\n            var parts = string.split(format_exec_split_re);\n            return $.map(parts, function(string) {\n                if ($.terminal.is_extended_command(string)) {\n                    var command = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                    return fn(command) || '';\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            if (!(rex instanceof RegExp)) {\n                throw new Error('tracking_replace: Second argument need to be RegExp');\n            }\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    var rep_len = length(rep_string);\n                    rep_len += count_selfclosing_formatting(rep_string);\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            rep_len -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += rep_len - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            // :: function will skip to next character in main loop\n            // :: TODO: improve performance of emoji regex and check whole\n            // :: string it's complex string if not use simple function\n            // ----------------------------------------------------------------\n            var get_next_character = make_next_char_fun(string);\n            function next_iteration() {\n                var char = get_next_character(substring);\n                if (char.length > 1 && $.terminal.length(substring) > 1) {\n                    return char.length - 1;\n                }\n                return 0;\n            }\n            // ----------------------------------------------------------------\n            function is_next_space() {\n                return (is_space(i) && (not_formatting || opening)) &&\n                    (space === -1 && prev_space !== i || space !== -1);\n            }\n            // ----------------------------------------------------------------\n            // :: last iteration or one before closing formatting\n            // ----------------------------------------------------------------\n            var last = false;\n            function is_last() {\n                if (i === string.length - 1 && !last) {\n                    last = true;\n                } else {\n                    last = formatting && !!substring.match(/^.]$/);\n                }\n                return last;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            var re_ent = /(&[^;]+);$/;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_next_space()) {\n                    space = i;\n                    space_count = count;\n                }\n                var braket = string[i].match(/[[\\]]/);\n                offset = 0;\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var char = get_next_character(substring);\n                    var size = char.length;\n                    // begining of enity that we've skipped, we are at the end\n                    if (char === ';') {\n                        match = string.slice(0, i + 1).match(re_ent);\n                        if (match) {\n                            offset = match[1].length;\n                            size = offset + 1;\n                        }\n                    }\n                    var data = {\n                        last: is_last(),\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: size,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1 && !last) {\n                    // last iteration, if formatting have last bracket,\n                    // from formatting, then last iteration\n                    // was already called (in if) #550\n                    callback({\n                        last: true,\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                if (in_text) {\n                    i += next_iteration();\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function return string splitted into single characters\n        // :: each character is wrapped into formatting from input string\n        // :: or empty formatting so it will create span when using with ::format\n        // ---------------------------------------------------------------------\n        partition: function partition(string) {\n            if (!$.terminal.have_formatting(string)) {\n                var chars = $.terminal.split_characters(string);\n                return chars.map(wrap);\n            }\n            var result = [];\n            function wrap(string) {\n                if (string.match(/\\\\$/)) {\n                    string += '\\\\';\n                }\n                return '[[;;]' + string + ']';\n            }\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    string = wrap(string);\n                }\n                return string;\n            }\n            $.terminal.iterate_formatting(string, function(data) {\n                if (data.text) {\n                    var text = [];\n                    if (data.formatting) {\n                        text.push(data.formatting);\n                    }\n                    text.push(string.substring(data.index, data.index + data.size));\n                    if (data.formatting) {\n                        text.push(']');\n                    }\n                    result.push(formatting(text.join('')));\n                }\n            });\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (format.match(self_closing_re) && text === '') {\n                    return '[[' + format + '] ]';\n                }\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                // space is hack for images that break iterate_formatting\n                format += semicolons + safe(text);\n                return '[[' + format + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var get_next_character = make_next_char_fun(line);\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                $.terminal.iterate_formatting(line, function(data) {\n                    var chr, substring;\n                    if (data.length >= length || data.last ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).substring(data.space_count);\n                            // real length, not counting formatting\n                            stripped = stripped.slice(0, length).trim();\n                            var text_len = strlen(stripped);\n                            if (stripped.match(/\\s/) || text_len < length) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var after_index = data.index + data.size;\n                        if (last_bracket) {\n                            after_index += 1;\n                        }\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            after_index !== line_length && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (data.last && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /\\[\\[([^\\][]+)\\][\\s\\S]*/;\n            var format_split_re = /^\\[\\[([^;]*);([^;]*);([^\\]]*)\\]/;\n            var class_i = 3; // index of the class in formatting\n            var attrs_i = 5; // index of attributes in formatting\n            // ---------------------------------------------------------------------------\n            function unique(value, index, self) {\n                return self.indexOf(value) === index;\n            }\n            // ---------------------------------------------------------------------------\n            function update_style(new_style, old_style) {\n                new_style = parse_style(new_style);\n                if (!old_style) {\n                    return new_style;\n                }\n                return $.extend(old_style, new_style);\n            }\n            // ---------------------------------------------------------------------------\n            function parse_style(string) {\n                var style = {};\n                string.split(/\\s*;\\s*/).forEach(function(string) {\n                    var parts = string.split(':').map(function(string) {\n                        return string.trim();\n                    });\n                    var prop = parts[0];\n                    var value = parts[1];\n                    style[prop] = value;\n                });\n                return style;\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_formatting(input) {\n                var result = input.slice();\n                if (input[attrs_i]) {\n                    result[attrs_i] = stringify_attrs(input[attrs_i]);\n                }\n                if (input[class_i]) {\n                    result[class_i] = stringify_class(input[class_i]);\n                }\n                result[0] = stringify_styles(input[0]);\n                return result.join(';');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_styles(input) {\n                var ignore = input.filter(function(s) {\n                    return s[0] === '-';\n                }).map(function(s) {\n                    return s[1];\n                });\n                return input.filter(function(s) {\n                    return ignore.indexOf(s) === -1 && ignore.indexOf(s[1]) === -1;\n                }).join('');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_attrs(attrs) {\n                return JSON.stringify(attrs, function(key, value) {\n                    if (key === 'style') {\n                        return stringify_style(value);\n                    }\n                    return value;\n                });\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_class(klass) {\n                return klass.filter(unique).join(' ');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_style(style) {\n                return Object.keys(style).map(function(prop) {\n                    return prop + ':' + style[prop];\n                }).join(';');\n            }\n            // ---------------------------------------------------------------------------\n            function get_inherit_style(stack) {\n                function update_attrs(value) {\n                    if (!output[attrs_i]) {\n                        output[attrs_i] = {};\n                    }\n                    try {\n                        var new_attrs = JSON.parse(value);\n                        if (new_attrs.style) {\n                            var new_style = new_attrs.style;\n                            var old_style = output[attrs_i].style;\n                            new_attrs.style = update_style(new_style, old_style);\n                            output[attrs_i] = $.extend(\n                                new_attrs,\n                                output[attrs_i],\n                                {\n                                    style: update_style(new_style, old_style)\n                                }\n                            );\n                        } else {\n                            output[attrs_i] = $.extend(\n                                new_attrs,\n                                output[attrs_i]\n                            );\n                        }\n                    } catch (e) {\n                        warn('Invalid JSON ' + value);\n                    }\n                }\n                var output = [[], '', ''];\n                if (!stack.length) {\n                    return output;\n                }\n                for (var i = stack.length; i--;) {\n                    var formatting = stack[i].split(';');\n                    if (formatting.length > 5) {\n                        var last = formatting.slice(5).join(';');\n                        formatting = formatting.slice(0, 5).concat(last);\n                    }\n                    var style = formatting[0].split(/(-?[@!gbiuso])/g).filter(Boolean);\n                    style.forEach(function(s) {\n                        if (output[0].indexOf(s) === -1) {\n                            output[0].push(s);\n                        }\n                    });\n                    for (var j = 1; j < formatting.length; ++j) {\n                        var value = formatting[j].trim();\n                        if (value) {\n                            if (j === class_i) {\n                                if (!output[class_i]) {\n                                    output[class_i] = [];\n                                }\n                                var classes = value.split(/\\s+/);\n                                output[class_i] = output[class_i].concat(classes);\n                            } else if (j === attrs_i) {\n                                update_attrs(value);\n                            } else if (!output[j]) {\n                                output[j] = value;\n                            }\n                        }\n                    }\n                }\n                return stringify_formatting(output);\n            }\n            return string.split(re).filter(Boolean).map(function(string) {\n                var style;\n                if (string.match(/^\\[\\[/) && !$.terminal.is_extended_command(string)) {\n                    var formatting = string.replace(format_re, '$1');\n                    var is_formatting = $.terminal.is_formatting(string);\n                    string = string.replace(format_split_re, '');\n                    stack.push(formatting);\n                    if ($.terminal.nested_formatting.__inherit__) {\n                        style = get_inherit_style(stack);\n                    } else {\n                        style = formatting;\n                    }\n                    if (!is_formatting) {\n                        string += ']';\n                    } else {\n                        stack.pop();\n                    }\n                    string = '[[' + style + ']' + string;\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        if ($.terminal.nested_formatting.__inherit__) {\n                            style = get_inherit_style(stack);\n                        } else {\n                            style = stack[stack.length - 1];\n                        }\n                        string = '[[' + style + ']' + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (settings && typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            function should_format(options) {\n                if (!settings || !options) {\n                    return true;\n                }\n                var props = ['echo', 'command', 'prompt'];\n                var have_any = props.some(function(name) {\n                    return options[name] === true;\n                });\n                if (!have_any) {\n                    return true;\n                }\n                for (var i = props.length; i--;) {\n                    var prop = props[i];\n                    if (options[prop] === true && settings[prop] === true) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            settings = settings || {};\n            var formatters = settings.formatters || $.terminal.defaults.formatters;\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (is_array(ret) && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] < length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else if (found_position) {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            } else {\n                                // initial position for replacers\n                                position = input[1];\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                if (found_position) {\n                                    return [string, position];\n                                }\n                                return [string, -1];\n                            } else {\n                                if (is_array(formatter)) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0]) &&\n                                        should_format(formatter[2])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    var after_len = text(result[0]).length;\n                                    if (after_len !== this_len) {\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        max += count_selfclosing_formatting(string);\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        var before = $.terminal.strip(input[0]);\n                        var after = $.terminal.strip(string);\n                        if (before === after) {\n                            return [string, input[1]];\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                charWidth: undefined,\n                escape: true,\n                anyLinks: false\n            }, options || {});\n            // -----------------------------------------------------------------\n            function filter_attr_names(names) {\n                if (names.length && settings.allowedAttributes.length) {\n                    return names.filter(function(name) {\n                        if (name === 'data-text') {\n                            return false;\n                        }\n                        var allowed = false;\n                        var filters = settings.allowedAttributes;\n                        for (var i = 0; i < filters.length; ++i) {\n                            if (filters[i] instanceof RegExp) {\n                                if (filters[i].test(name)) {\n                                    allowed = true;\n                                    break;\n                                }\n                            } else if (filters[i] === name) {\n                                allowed = true;\n                                break;\n                            }\n                        }\n                        return allowed;\n                    });\n                }\n                return [];\n            }\n            // -----------------------------------------------------------------\n            function clean_data(data, text) {\n                if (data === '') {\n                    return text;\n                } else {\n                    return data.replace(/&#93;/g, ']')\n                        .replace(/>/g, '&gt;')\n                        .replace(/</g, '&lt;')\n                        .replace(/\"/g, '&quot;');\n                }\n            }\n            // -----------------------------------------------------------------\n            function add_attrs(attrs) {\n                if (attrs) {\n                    var keys = filter_attr_names(Object.keys(attrs));\n                    if (keys.length) {\n                        return ' ' + keys.map(function(name) {\n                            var value = attrs[name].replace(/\"/g, '&quot;');\n                            return name + '=\"' + value + '\"';\n                        }).join(' ');\n                    }\n                }\n                return '';\n            }\n            // -----------------------------------------------------------------\n            function rel_attr() {\n                var rel = [\"noopener\"];\n                if (settings.linksNoReferrer) {\n                    rel.unshift(\"noreferrer\");\n                }\n                if (settings.linksNoFollow) {\n                    rel.unshift(\"nofollow\");\n                }\n                return rel;\n            }\n            // -----------------------------------------------------------------\n            // test if this is valid Path\n            // -----------------------------------------------------------------\n            function is_path(url) {\n                return url.match(/^\\.{1,2}\\//) ||\n                    url.match(/^\\//) ||\n                    !(url.match(/\\//) || url.match(/^[^:]+:/));\n            }\n            // -----------------------------------------------------------------\n            function with_url_validation(fn) {\n                return function(url) {\n                    if (settings.anyLinks) {\n                        return true;\n                    }\n                    var test = fn(url);\n                    if (!test) {\n                        warn('Invalid URL ' + url + ' only http(s) ftp and Path ' +\n                             'are allowed');\n                    }\n                    return test;\n                };\n            }\n            // -----------------------------------------------------------------\n            var valid_href = with_url_validation(function(url) {\n                return url.match(/^((https?|file|ftp):\\/\\/|\\.{0,2}\\/)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            var valid_src = with_url_validation(function(url) {\n                return url.match(/^(https?:|file:|blob:|data:)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            function format(s, style, color, background, _class, data_text, text) {\n                function pre_process_link(data) {\n                    var result;\n                    if (data.match(email_re)) {\n                        result = '<a href=\"mailto:' + data + '\"';\n                    } else {\n                        // only http and ftp links (prevent javascript)\n                        // unless user force it with anyLinks option\n                        if (!valid_href(data)) {\n                            data = '';\n                        }\n                        result = '<a target=\"_blank\"';\n                        if (data) {\n                            result += ' href=\"' + data + '\"';\n                        }\n                        result += ' rel=\"' + rel_attr().join(' ') + '\"';\n                    }\n                    return result;\n                }\n                function pre_process_image(data) {\n                    var result = '<img';\n                    if (valid_src(data)) {\n                        result += ' src=\"' + data + '\"';\n                        if (text) {\n                            result += ' alt=\"' + text + '\"';\n                        }\n                    }\n                    return result;\n                }\n                var attrs;\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        var str = splitted.slice(1).join(';')\n                            .replace(/&nbsp;/g, ' ')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>');\n                        if (str.match(/^\\s*\\{[^}]*\\}\\s*$/)) {\n                            attrs = JSON.parse(str);\n                            data_text = splitted[0];\n                        }\n                    } catch (e) {\n                    }\n                }\n                if (text === '' && !style.match(/@/)) {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                text = safe(text);\n                text = text.replace(/\\\\\\]/g, '&#93;');\n                if (settings.escape) {\n                    // inside formatting we need to unescape escaped slashes\n                    // but this escape is not needed when echo - don't know why\n                    text = text.replace(/\\\\\\\\/g, '\\\\');\n                }\n                var style_str = '';\n                if (style.indexOf('b') !== -1) {\n                    style_str += 'font-weight:bold;';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    style_str += 'text-decoration:' +\n                        text_decoration.join(' ') + ';';\n                }\n                if (style.indexOf('i') !== -1) {\n                    style_str += 'font-style:italic;';\n                }\n                if ($.terminal.valid_color(color)) {\n                    style_str += [\n                        'color:' + color,\n                        '--color:' + color,\n                        '--original-color:' + color\n                    ].join(';') + ';';\n                    if (style.indexOf('!') !== -1) {\n                        style_str += '--link-color:' + color + ';';\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        style_str += 'text-shadow:0 0 5px ' + color + ';';\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    style_str += [\n                        'background-color:' + background,\n                        '--background:' + background\n                    ].join(';') + ';';\n                }\n                var data = clean_data(data_text, text);\n                var extra = extra_css(text, settings);\n                if (extra) {\n                    text = wide_characters(text, settings);\n                    style_str += extra;\n                }\n                var result;\n                if (style.indexOf('!') !== -1) {\n                    result = pre_process_link(data);\n                } else if (style.indexOf('@') !== -1) {\n                    result = pre_process_image(data);\n                } else {\n                    result = '<span';\n                }\n                if (attrs && attrs.style) {\n                    // merge style attr and colors #617\n                    attrs.style = style_str + attrs.style;\n                    style_str = '';\n                }\n                result += add_attrs(attrs);\n                if (style_str !== '') {\n                    result += ' style=\"' + style_str + '\"';\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                // links and image need data-text attribute cmd click behavior\n                // formatter can return links.\n                if (style.indexOf('!') !== -1) {\n                    result += ' data-text>' + text + '</a>';\n                } else if (style.indexOf('@') !== -1) {\n                    result += ' data-text/>';\n                } else {\n                    result += ' data-text=\"' + data + '\">' +\n                        '<span>' + text + '</span></span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        text = text.replace(/\\\\\\]/, '&#93;');\n                        var data = clean_data(text);\n                        var extra = extra_css(text, settings);\n                        var prefix;\n                        if (extra.length) {\n                            text = wide_characters(text, settings);\n                            prefix = '<span style=\"' + extra + '\"';\n                        } else {\n                            prefix = '<span';\n                        }\n                        return prefix + ' data-text=\"' + data + '\">' + text + '</span>';\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;')\n                .replace(/\\]/g, '&#93;')\n                .replace(/\\\\/g, '&#92;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[')\n                .replace(/&#93;/g, ']')\n                .replace(/&#92;/g, '\\\\');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string, raw) {\n            if (!string) {\n                return 0;\n            }\n            return $.terminal.split_characters(raw ? string : text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            var get_next_character = make_next_char_fun(string);\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            if (!$.terminal.have_formatting(str)) {\n                return str;\n            }\n            return $.terminal.format_split(str).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    str = str.replace(format_parts_re, '$6');\n                    return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                        return bracket;\n                    });\n                }\n                return str;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"`]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\" || string === \"``\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(\\\\\\\\\\\\\\\\(?:\\\\\\\\\\\\\\\\)*)\" + quote, \"g\");\n                        string = string.replace(re, '$1').replace(/^[`'\"]|[`'\"]$/g, '');\n                        if (quote === \"'\") {\n                            string = string.replace(/\"/g, '\\\\\"');\n                        }\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === \"`\" && arg[arg.length - 1] === \"`\") {\n                    return arg.replace(/^`|`$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"`]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            if (arg === 'true') {\n                return true;\n            } else if (arg === 'false') {\n                return false;\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"`]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                var str = typeof arg === 'string' ? arg : '';\n                if (str.match(/^--?[^-]/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (str.match(/^--[^-]/)) {\n                    var name = str.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (str.match(/^-[^-]/)) {\n                    var single = str.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            var deferred = new $.Deferred();\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        deferred.reject();\n                    } else {\n                        string = m[1];\n                        var obj = m[2] === 'terminal' ? term : term.cmd();\n                        var fn = m[3];\n                        try {\n                            var args = eval('[' + m[4] + ']');\n                            if (!obj[fn]) {\n                                term.error('Unknow function ' + fn);\n                            } else {\n                                var ret = obj[fn].apply(term, args);\n                                if (ret && ret.then) {\n                                    return ret;\n                                }\n                            }\n                            deferred.resolve();\n                        } catch (e) {\n                            term.error('Invalid invocation in ' +\n                                       $.terminal.escape_brackets(string));\n                            deferred.reject();\n                        }\n                    }\n                } else {\n                    return term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n                deferred.reject();\n            }\n            return deferred.promise();\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n    // -----------------------------------------------------------------------\n    $.rpc = function(url, method, params) {\n        var deferred = new $.Deferred();\n        function success(res) {\n            if (res.error) {\n                deferred.reject(res.error);\n            } else {\n                deferred.resolve(res.result);\n            }\n        }\n        function error(jqXHR, status, message) {\n            deferred.reject({message: message});\n        }\n        $.jrpc(url, method, params, success, error);\n        return deferred.promise();\n    };\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.cmd-prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.cmd-prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd'))\n                .html('&nbsp;')\n                .wrap('<div class=\"cmd-wrapper\"/>');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.parent().remove();\n        } else {\n            var temp = $('<div class=\"terminal terminal-temp\"><div class=\"terminal-' +\n                         'wrapper\"><div class=\"terminal-output\"><div><div class=\"te' +\n                         'rminal-line\" style=\"float: left\"><span>&nbsp;</span></div' +\n                         '></div></div></div>').appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.terminal-line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        var fill = terminal.find('.terminal-fill');\n        var height = fill.height();\n        return Math.floor(height / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function is_object(object) {\n        return object && typeof object === 'object';\n    }\n    // -----------------------------------------------------------------------\n    function is_promise(object) {\n        return is_object(object) && is_function(object.then || object.done);\n    }\n    // -----------------------------------------------------------------------\n    function is_deferred(object) {\n        return is_promise(object) && is_function(object.promise);\n    }\n    // -----------------------------------------------------------------------\n    if (!Array.isArray) {\n        Array.isArray = function(arg) {\n            return Object.prototype.toString.call(arg) === '[object Array]';\n        };\n    }\n    // -----------------------------------------------------------------------\n    function is_array(object) {\n        return Array.isArray(object);\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        if (typeof object === 'function') {\n            return 'function';\n        }\n        if (object === null) {\n            return object + '';\n        }\n        if (Array.isArray(object)) {\n            return 'array';\n        }\n        if (typeof object === 'object') {\n            return 'object';\n        }\n        return typeof object;\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2021 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2021 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // if set to false nested formatting will not inherit styles colors and attribues\n    $.terminal.nested_formatting.__inherit__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        mousewheel: null,\n        touchscroll: null,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        execAnimation: false,\n        execAnimationDelay: 100,\n        linksNoReferrer: false,\n        useCache: true,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        mobileDelete: is_mobile,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        unixFormatting: {\n            escapeBrackets: false,\n            ansiParser: {},\n            ansiArt: false\n        },\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: [],\n        mobileIngoreAutoSpace: [],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        keymap: null,\n        doubleTab: null,\n        doubleTabEchoCommand: false,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        renderHandler: null,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        onBeforeCommand: null,\n        onAfterCommand: null,\n        onBeforeEcho: null,\n        onAfterEcho: null,\n        onBeforeLogin: null,\n        onAfterLogout: null,\n        onBeforeLogout: null,\n        allowedAttributes: ['title', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong username or password try again!',\n            wrongPassword: 'Wrong username or password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveLoop: 'Recursive loop in echo detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that use option to render objects\n        // ---------------------------------------------------------------------\n        function preprocess_value(value, options) {\n            if ($.terminal.Animation && value instanceof $.terminal.Animation) {\n                value.start(self);\n                return false;\n            }\n            if (is_function(settings.renderHandler)) {\n                var ret = settings.renderHandler.call(self, value, options, self);\n                if (ret === false) {\n                    return false;\n                }\n                if (typeof ret === 'string' || is_node(ret) || is_promise(ret)) {\n                    return ret;\n                } else {\n                    return value;\n                }\n            }\n            return value;\n        }\n        // ---------------------------------------------------------------------\n        // :: call when line is out of view when outputLimit is used\n        // :: NOTE: it's not called when less plugin is used onClear is called\n        // :: instead because less call term::clear() after export old view\n        // ---------------------------------------------------------------------\n        function unmount(node) {\n            var index = node.data('index');\n            var line = lines[index];\n            var options = line[1];\n            if (is_function(options.unmount)) {\n                options.unmount.call(self, node);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function used in render and in update\n        // ---------------------------------------------------------------------\n        function prepare_render(value, options) {\n            if (is_node(value)) {\n                var settings = $.extend({}, options, {\n                    raw: true,\n                    finalize: function(div) {\n                        div.find('.terminal-render-item').replaceWith(value);\n                        if (options && is_function(options.finalize)) {\n                            options.finalize(div, self);\n                        }\n                    }\n                });\n                return ['<div class=\"terminal-render-item\"/>', settings];\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that renders DOM nodes and jQuery objects\n        // ---------------------------------------------------------------------\n        function render(value, options) {\n            var ret = prepare_render(value, options);\n            if (ret) {\n                self.echo.apply(self, ret);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function get_node(index) {\n            return output.find('[data-index=' + index + ']');\n        }\n        // ---------------------------------------------------------------------\n        // :: test if object can be rendered\n        // ---------------------------------------------------------------------\n        function is_node(object) {\n            return object instanceof $.fn.init || object instanceof Element;\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            object = preprocess_value(object);\n            if (object === false) {\n                return;\n            }\n            if (render(object)) {\n                return;\n            }\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (is_array(object)) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display line code in the file if line numbers are present\n        // ---------------------------------------------------------------------\n        function print_line(url_spec, cols) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    var start = n > 2 ? n - 2 : 0;\n                    var lines = code.slice(start, n + 3).map(function(line, i) {\n                        var prefix = '[' + (n + i - 1) + ']: ';\n                        var limit = cols - prefix.length - 4;\n                        if (line.length > limit) {\n                            line = line.substring(0, limit) + '...';\n                        }\n                        if (n > 2 ? i === 2 : i === n) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return prefix + line;\n                    }).filter(Boolean).join('\\n');\n                    if (lines.length) {\n                        self.echo('[[b;white;]' + file + ']');\n                        self.echo(lines).resume();\n                    }\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else if (json.result !== null) {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token(true);\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpreter object based on JSON-RPC meta data\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpeter function and call finalize with\n        // :: interpreter and optional completion\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter && fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        text || data\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    var m = text.match(email_full_re) || text.match(url_full_re);\n                    if (m) {\n                        return formatting('!', m[1]) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            function linkify(string) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return linkify(string);\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return linkify(str);\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function should_wrap(string, options) {\n            return (strlen(text(string)) > options.cols ||\n                    string.match(/\\n/)) &&\n                ((settings.wrap === true &&\n                  options.wrap === undefined) ||\n                 settings.wrap === false &&\n                 options.wrap === true);\n        }\n        // ---------------------------------------------------------------------\n        var line_cache;\n        if ('Map' in root) {\n            line_cache = new Map();\n        }\n        // ---------------------------------------------------------------------\n        function process_extended_commands(string, line, line_settings) {\n            if (line_settings.exec || line.options.clear_exec) {\n                return $.terminal.each_extended_command(string, function(command) {\n                    // redraw should not execute commands and it have\n                    // and lines variable have all extended commands\n                    if (line_settings.exec) {\n                        line.options.exec = false;\n                        line.options.clear_exec = true;\n                        var trim = command.trim();\n                        if (prev_exec_cmd && prev_exec_cmd === trim) {\n                            prev_exec_cmd = '';\n                            self.error(strings().recursiveLoop);\n                        } else {\n                            prev_exec_cmd = trim;\n                            $.terminal.extended_command(self, command, {\n                                invokeMethods: line_settings.invokeMethods\n                            }).then(function() {\n                                prev_exec_cmd = '';\n                            });\n                        }\n                    }\n                });\n            }\n            return string;\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var use_cache = !is_function(line.value);\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    useCache: use_cache,\n                    invokeMethods: false,\n                    formatters: true,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string = stringify_value(line.value);\n                if (string && is_function(string.then)) {\n                    // handle function that return a promise #629\n                    return string.then(function(string) {\n                        process_line($.extend(line, {\n                            value: string,\n                            options: line_settings\n                        }));\n                    });\n                }\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (settings.useCache && line_settings.useCache) {\n                            var key = string;\n                            if (line_cache && line_cache.has(key)) {\n                                var data = line_cache.get(key);\n                                buffer.append(\n                                    data.input,\n                                    line.index,\n                                    line_settings,\n                                    data.raw\n                                );\n                                return true;\n                            }\n                        }\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    $.extend(settings, {echo: true})\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        string = process_extended_commands(string, line, line_settings);\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        var raw_string = string;\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                        //string = $.terminal.normalize(string);\n                        var array;\n                        var cols = line_settings.cols = self.cols();\n                        if (should_wrap(string, line_settings)) {\n                            var words = line_settings.keepWords;\n                            array = $.terminal.split_equal(string, cols, words);\n                        } else if (string.match(/\\n/)) {\n                            array = string.split(/\\n/);\n                        }\n                    }\n                } else {\n                    raw_string = '';\n                }\n                var arg = array || string;\n                if (line_cache && key && use_cache) {\n                    line_cache.set(key, {input: arg, raw: raw_string});\n                }\n                buffer.append(arg, line.index, line_settings, raw_string);\n            } catch (e) {\n                buffer.clear();\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n            // is it work with unpromise that ignore undefined\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            try {\n                buffer.clear();\n                unpromise(lines.render(self.rows(), function(lines_to_show) {\n                    return lines_to_show.map(function(line) {\n                        return process_line(line);\n                    });\n                }), function() {\n                    self.flush(options);\n                    if (!options.update) {\n                        command_line.before(detached_output); // reinsert output\n                    }\n                    fire_event('onAfterRedraw');\n                });\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            unmount($self);\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                    lines.limit_snapshot(max);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    self.echo(function() {\n                        try {\n                            return settings.greetings.call(self, self.echo);\n                        } catch (e) {\n                            settings.greetings = null;\n                            display_exception(e, 'greetings');\n                        }\n                    });\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                exec: false,\n                formatters: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('terminal-command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            command = $.terminal.apply_formatters(command, {command: true});\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        function make_label_error(label) {\n            return function(e) {\n                self.error('[' + label + '] ' + (e.message || e)).resume();\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function before_async_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function is_animation_promise(ret) {\n                return is_function(ret.done || ret.then) && animating;\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                before_async_exec();\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        if (is_animation_promise(result)) {\n                            states.PAUSED = true;\n                        } else {\n                            self.pause(settings.softPause);\n                        }\n                    }\n                    force_awake = false;\n                    var error = make_label_error('Command');\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        return unpromise(result, show, error);\n                    } else {\n                        return $.when(result).done(show).catch(error);\n                    }\n                } else {\n                    if (states.PAUSED) {\n                        resume_callbacks.push(function() {\n                            // exec with resume/pause in user code\n                            after_exec();\n                        });\n                    } else {\n                        after_exec();\n                    }\n                    return deferred.promise();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (exec) {\n                    prev_exec_cmd = command.trim();\n                    prev_command = $.terminal.split_command(prev_exec_cmd);\n                } else {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    before_async_exec();\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    before_async_exec();\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    before_async_exec();\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (fire_event('onBeforeLogout', [], true) === false) {\n                return;\n            }\n            clear_loging_storage();\n            fire_event('onAfterlogout', [], true);\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            var prompt = interpreter.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            if (prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    // prevent flicker of old prompt until async prompt finishes\n                    command_line.prompt('');\n                }\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap(null).keymap($.extend(\n                    {},\n                    terminal_init_keymap,\n                    $.omap(interpreter.keymap, function(name, fun) {\n                        return function() {\n                            var args = [].slice.call(arguments);\n                            try {\n                                return fun.apply(self, args);\n                            } catch (e) {\n                                display_exception(e, 'USER KEYMAP');\n                            }\n                        };\n                    })\n                ));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args, skip_local) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name]) && !skip_local) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        var scroll_to_view = (function() {\n            function scroll_to_view(visible) {\n                if (!visible) {\n                    // try catch for Node.js unit tests\n                    try {\n                        self.scroll_to(self.find('.cmd-cursor-line'));\n                        return true;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            // we don't want debounce in Unit Tests\n            if (typeof global !== 'undefined' && typeof global.it === 'function') {\n                return scroll_to_view;\n            }\n            return debounce(scroll_to_view, 100, {\n                leading: true,\n                trailing: false\n            });\n        })();\n        // ---------------------------------------------------------------------\n        function make_cursor_visible() {\n            var cursor = self.find('.cmd-cursor-line');\n            return cursor.is_fully_in_viewport(self).then(scroll_to_view);\n        }\n        // ---------------------------------------------------------------------\n        function replace_hash(state) {\n            if (typeof history !== 'undefined' && history.replaceState) {\n                var new_hash = '#' + JSON.stringify(state);\n                var url = location.href.replace(/#.*$/, new_hash);\n                history.replaceState(null, '', url);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                // for case when showing long error before init\n                if (echo_delay.length) {\n                    // for case when greetting is async function\n                    $.when.apply($, echo_delay).then(self.refresh);\n                } else {\n                    self.refresh();\n                }\n            }\n            function next() {\n                onPause = $.noop;\n                if (!was_paused && self.enabled()) {\n                    // resume login if user didn't call pause in onInit\n                    // if user pause in onInit wait with exec until it\n                    // resume\n                    self.resume(true);\n                }\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                var ret;\n                try {\n                    ret = settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                } finally {\n                    if (!is_promise(ret)) {\n                        next();\n                    } else {\n                        ret.then(next).catch(function(e) {\n                            display_exception(e, 'OnInit');\n                            next();\n                        });\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                with_selection(function(html) {\n                    if (html === '') {\n                        var command = self.get_command();\n                        var position = self.get_position();\n                        command = command.slice(0, position) + '^C' +\n                            command.slice(position + 2);\n                        echo_command(command);\n                        self.set_command('');\n                    } else {\n                        var clip = self.find('textarea');\n                        text_to_clipboard(clip, process_selected_html(html));\n                    }\n                });\n                return false;\n            },\n            'CTRL+L': function() {\n                self.clear();\n                return false;\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    // local copy\n                    commands = commands.slice();\n                    // default commands should not match for arguments\n                    if (!self.before_cursor(false).match(/\\s/)) {\n                        if (settings.clear && $.inArray('clear', commands) === -1) {\n                            commands.push('clear');\n                        }\n                        if (settings.exit && $.inArray('exit', commands) === -1) {\n                            commands.push('exit');\n                        }\n                    }\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        echoCommand: settings.doubleTabEchoCommand,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            unpromise(result, resolve, make_label_error('Completion'));\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // than one terminal)\n            var result, i;\n            if (self.animating()) {\n                return false;\n            }\n            if (self.enabled() && !self.frozen()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (allow_input()) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Typing animation generator\n        // ---------------------------------------------------------------------\n        function typed(finish_typing_fn) {\n            return function typing_animation(message, options) {\n                var formattted = $.terminal.apply_formatters(message, {\n                    animation: true\n                });\n                animating = true;\n                var prompt = self.get_prompt();\n                var char_i = 0;\n                var len = $.terminal.length(formattted);\n                if (message.length > 0) {\n                    var new_prompt = '';\n                    if (options.prompt) {\n                        new_prompt = options.prompt;\n                    } else {\n                        self.set_prompt('');\n                    }\n                    var bottom = self.is_bottom();\n                    var interval = setInterval(function() {\n                        var chr = $.terminal.substring(formattted, char_i, char_i + 1);\n                        new_prompt += chr;\n                        self.set_prompt(new_prompt);\n                        if (chr === '\\n' && bottom) {\n                            self.scroll_to_bottom();\n                        }\n                        char_i++;\n                        if (char_i === len) {\n                            clearInterval(interval);\n                            setTimeout(function() {\n                                // swap command with prompt\n                                finish_typing_fn(message, prompt, options);\n                                animating = false;\n                            }, options.delay);\n                        }\n                    }, options.delay);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        var typed_prompt = typed(function(message, _, options) {\n            self.set_prompt(message);\n            options.finalize();\n        });\n        // ---------------------------------------------------------------------\n        var typed_insert = (function() {\n            var helper = typed(function(message, prompt, options) {\n                self.set_prompt(prompt);\n                self.insert(message);\n                options.finalize();\n            });\n            return function(prompt, command, options) {\n                return helper(command, $.extend({}, options, {\n                    prompt: prompt + self.get_command()\n                }));\n            };\n        })();\n        // ---------------------------------------------------------------------\n        var typed_message = typed(function(message, prompt, options) {\n            self.set_prompt(prompt);\n            self.echo(message, $.extend({}, options, {typing: false}));\n        });\n        // ---------------------------------------------------------------------\n        var typed_enter = (function() {\n            var helper = typed(function(message, prompt, options) {\n                self.set_prompt(prompt);\n                with_prompt(prompt, function(prompt) {\n                    self.echo(prompt + message, $.extend({}, options, {typing: false}));\n                }, self);\n            });\n            return function(prompt, message, options) {\n                return helper(message, $.extend({}, options, {prompt: prompt}));\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function with_typing(kind, else_fn, finalize_fn) {\n            return function with_typing_fn(string, options) {\n                var d = new $.Deferred();\n                when_ready(function ready() {\n                    var locals = $.extend({\n                        typing: false,\n                        delay: settings.execAnimationDelay\n                    }, options);\n                    if (locals.typing) {\n                        if (typeof string !== 'string') {\n                            return d.reject(kind + ': Typing animation require string');\n                        }\n                        if (typeof locals.delay !== 'number' || isNaN(locals.delay)) {\n                            return d.reject(kind + ': Invalid argument, delay need to' +\n                                            ' be a number');\n                        }\n                        var p = self.typing(kind, locals.delay, string, locals);\n                        p.then(function() {\n                            d.resolve();\n                        });\n                    } else {\n                        else_fn(string, locals);\n                    }\n                    if (is_function(finalize_fn)) {\n                        finalize_fn(string, locals);\n                    }\n                });\n                if (options && options.typing) {\n                    return d.promise();\n                }\n                return self;\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        var body_terminal;\n        if (self.is('body,html')) {\n            // terminal already exists on body\n            if (self.hasClass('full-screen-terminal')) {\n                var data = self.find('> .terminal').data('terminal');\n                if (data) {\n                    return data;\n                }\n            }\n            body_terminal = self;\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        } else if (self.data('terminal')) {\n            // terminal already exists\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        var public_api = $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                if (fire_event('onClear') !== false) {\n                    buffer.clear();\n                    lines.clear(function(i) {\n                        return get_node(i);\n                    });\n                    output[0].innerHTML = '';\n                    self.prop({scrollTop: 0});\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: states.ENABLED,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines.data()),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines.import(clone(view.lines).filter(function(line) {\n                        return line[0];\n                    }));\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // :: if second argument is object is used as options\n            // -------------------------------------------------------------\n            exec: function(command, silent, options) {\n                function invoke(silent) {\n                    // commands may return promise from user code\n                    // it will resolve exec promise when user promise\n                    // is resolved\n                    var ret = commands(command, silent, true);\n                    unpromise(ret, function() {\n                        // reset prev command for push called after exec\n                        // so push didn't get name/prompt from exec command\n                        prev_command = null;\n                        d.resolve();\n                    }, function() {\n                        prev_command = null;\n                        d.reject();\n                    });\n                }\n                if (silent && typeof silent === 'object') {\n                    options = silent;\n                    silent = null;\n                }\n                var exec_settings = $.extend({\n                    deferred: null,\n                    silent: false,\n                    typing: false,\n                    delay: settings.execAnimationDelay\n                }, options);\n                if (silent === null) {\n                    silent = exec_settings.silent;\n                }\n                if (!is_deferred(exec_settings.deferred)) {\n                    exec_settings.deferred = new $.Deferred();\n                }\n                var d = exec_settings.deferred;\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent, options).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (states.PAUSED) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, exec_settings]);\n                    } else if (exec_settings.typing && !silent) {\n                        var delay = exec_settings.delay;\n                        states.PAUSED = true;\n                        var ret = self.typing('enter', delay, command, {\n                            delay: delay\n                        });\n                        ret.then(function() {\n                            states.PAUSED = false;\n                            invoke(true);\n                        });\n                        d.then(function() {\n                            states.PAUSED = false;\n                        });\n                    } else {\n                        invoke(silent);\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                function popUserPass() {\n                    while (self.level() > level) {\n                        self.pop(undefined, true);\n                    }\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        popUserPass();\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        fire_event('onAfterLogin', [user, token]);\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    if (self.paused()) {\n                        self.resume();\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    if (fire_event('onBeforeLogin', [user, token]) === false) {\n                        return;\n                    }\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            if (fire_event('onBeforeLogin', [user, pass]) === false) {\n                                popUserPass();\n                                return;\n                            }\n                            self.pause();\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, function(token) {\n                                    login_callback(user, token);\n                                }).catch(function(err) {\n                                    self.pop(undefined, true).pop(undefined, true);\n                                    self.error(err.message);\n                                    if (is_function(error)) {\n                                        error();\n                                    }\n                                    if (self.paused()) {\n                                        self.resume();\n                                    }\n                                    self.off('terminal.autologin');\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    echoCommand: false,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function escape(string) {\n                    if (quote === '\"') {\n                        string = string.replace(/\"/g, '\\\\\"');\n                    }\n                    if (!quote && options.escape) {\n                        string = string.replace(/([\"'() ])/g, '\\\\$1');\n                    }\n                    return string;\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (commands[i].match(/\\n/) && options.word) {\n                            warn('If you use commands with newlines you ' +\n                                 'should use word option for complete or' +\n                                 ' wordAutocomplete terminal option');\n                        }\n                        if (regex.test(commands[i])) {\n                            var match = escape(commands[i]);\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                // new API old is keep for backward compatibility\n                                if (options.echoCommand) {\n                                    echo_command();\n                                }\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(escape(string), matched, sensitive);\n                        if (common) {\n                            replace(safe, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                var defer = $.Deferred();\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                        defer.resolve();\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return states.PAUSED;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    states.PAUSED = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.cmd-prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function(silent) {\n                cmd_ready(function ready() {\n                    states.PAUSED = false;\n                    if (states.ENABLED && terminals.front() === self) {\n                        command_line.enable(silent);\n                    }\n                    command_line.find('.cmd-prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (!num_chars || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (!num_rows) {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: Return size of the terminal instance\n            // -------------------------------------------------------------\n            geometry: function() {\n                var style = window.getComputedStyle(self[0]);\n                function padding(name) {\n                    return parseInt(style.getPropertyValue('padding-' + name), 10) || 0;\n                }\n                var left = padding('left');\n                var right = padding('right');\n                var top = padding('top');\n                var bottom = padding('bottom');\n                return {\n                    terminal: {\n                        padding: {\n                            left: left,\n                            right: right,\n                            top: top,\n                            bottom: bottom\n                        },\n                        width: old_width + left + right,\n                        height: old_height + top + bottom\n                    },\n                    char: char_size,\n                    cols: this.cols(),\n                    rows: this.rows()\n                };\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else if (!states.FROZEN) {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        if (!(states.ENABLED || states.FROZEN || states.TYPING)) {\n                            self.enable(silent);\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze === true || freeze === undefined) {\n                        self.disable();\n                        states.FROZEN = true;\n                    } else {\n                        states.FROZEN = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return states.FROZEN;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!(states.ENABLED || states.FROZEN)) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!(silent || states.ENABLED)) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            states.ENABLED = true;\n                            if (!self.paused()) {\n                                command_line.enable(true);\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: function clear formatting cache if you don't longer need it\n            // :: cache is used if option useCache is set to true\n            // -------------------------------------------------------------\n            clear_cache: 'Map' in root ? function() {\n                buffer.clear_cache();\n                line_cache.clear();\n                return self;\n            } : function() {\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && states.ENABLED) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        states.ENABLED = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return states.ENABLED;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lengths = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lengths) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: better API than echo_command that supports animation\n            // -------------------------------------------------------------\n            enter: with_typing('enter', echo_command),\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, options) {\n                if (typeof string === 'string') {\n                    var locals;\n                    var defaults = {\n                        stay: false,\n                        typing: false,\n                        delay: 100\n                    };\n                    if (!is_object(options)) {\n                        options = {\n                            stay: options\n                        };\n                    }\n                    locals = $.extend(defaults, options);\n                    var d = new $.Deferred();\n                    when_ready(function ready() {\n                        function done() {\n                            if (settings.scrollOnEcho || bottom) {\n                                self.scroll_to_bottom();\n                            }\n                        }\n                        var bottom = self.is_bottom();\n                        if (locals.typing) {\n                            var delay = locals.delay;\n                            var p = self.typing('insert', delay, string, settings);\n                            p.then(function() {\n                                done();\n                                d.resolve();\n                            });\n                        } else {\n                            command_line.insert(string, settings.stay);\n                            done();\n                        }\n                    });\n                    if (locals.typing) {\n                        return d.promise();\n                    }\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: with_typing('prompt', function(prompt) {\n                if (is_function(prompt)) {\n                    command_line.prompt(function(callback) {\n                        return prompt.call(self, callback, self);\n                    });\n                } else {\n                    command_line.prompt(prompt);\n                }\n            }, function(prompt) {\n                interpreters.top().prompt = prompt;\n            }),\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // :: the output may contain user terminal formatting\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines.data();\n                } else {\n                    return lines.get_snapshot();\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        fire_event('onResize');\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        self.clear_cache();\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal and invalidate cache\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                self.clear_cache();\n                if (command) {\n                    command_line.resize();\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                when_ready(function ready() {\n                    try {\n                        if (buffer.is_empty()) {\n                            return self;\n                        }\n                        var bottom = self.is_bottom();\n                        var scroll = (settings.scrollOnEcho && options.scroll) || bottom;\n                        var wrapper;\n                        // print all lines\n                        var first = true;\n                        var appending_to_partial = false;\n                        var partial = $();\n                        var snapshot;\n                        if (!options.update) {\n                            partial = self.find('.partial');\n                            snapshot = lines.get_partial();\n                        }\n                        // TODO: refactor buffer.flush(), there is way\n                        //       to many levels of abstractions in one place\n                        buffer.flush(function(data) {\n                            if (!data) {\n                                if (!partial.length) {\n                                    wrapper = $('<div/>');\n                                    snapshot = [];\n                                } else if (first) {\n                                    first = false;\n                                    appending_to_partial = true;\n                                    wrapper = partial;\n                                }\n                            } else if (is_function(data.finalize)) {\n                                if (scroll) {\n                                    wrapper.find('img').on('load', function() {\n                                        self.scroll_to_bottom();\n                                    });\n                                }\n                                // this is finalize function from echo\n                                if (options.update) {\n                                    lines.update_snapshot(data.index, snapshot);\n                                    var selector = '> div[data-index=' + data.index + ']';\n                                    var node = output.find(selector);\n                                    if (node.html() !== wrapper.html()) {\n                                        node.replaceWith(wrapper);\n                                    }\n                                } else {\n                                    wrapper.appendTo(output);\n                                    if (!partial.length) {\n                                        lines.make_snapshot(snapshot);\n                                    }\n                                }\n                                wrapper.attr('data-index', data.index);\n                                appending_to_partial = !data.newline;\n                                wrapper.toggleClass('partial', appending_to_partial);\n                                if (appending_to_partial) {\n                                    partial = wrapper;\n                                }\n                                data.finalize(wrapper);\n                            } else {\n                                var line = data.line;\n                                var div;\n                                if (typeof data.raw === 'string') {\n                                    if (appending_to_partial) {\n                                        snapshot[snapshot.length - 1] += data.raw;\n                                    } else {\n                                        snapshot.push(data.raw);\n                                    }\n                                }\n                                if (appending_to_partial) {\n                                    div = wrapper.children().last().append(line);\n                                    appending_to_partial = false;\n                                } else {\n                                    div = $('<div/>').html(line);\n                                    if (data.newline) {\n                                        div.addClass('cmd-end-line');\n                                    }\n                                    wrapper.append(div);\n                                }\n                                // width = '100%' does some weird extra magic\n                                // that makes the height correct. Any other\n                                // value doesn't work.\n                                div.css('width', '100%');\n                            }\n                        });\n                        var cmd_prompt = self.find('.cmd-prompt');\n                        var cmd_outer = self.find('.cmd');\n                        partial = self.find('.partial');\n                        var last_row;\n                        if (partial.length === 0) {\n                            cmd_prompt.css('margin-left', 0);\n                            cmd_outer.css('top', 0);\n                            command_line.__set_prompt_margin(0);\n                            last_row = self.find('.terminal-output div:last-child' +\n                                                 ' div:last-child');\n                            // check if the div is parital fix #695\n                            if (last_row.css('display') === 'inline-block') {\n                                last_row.css({\n                                    width: '100%',\n                                    display: ''\n                                });\n                            }\n                        } else {\n                            last_row = partial.children().last();\n                            // Remove width='100%' for two reasons:\n                            // 1. so we can measure the width right here\n                            // 2. so that the background of this last line of output\n                            //    doesn't occlude the first line of input to the right\n                            last_row.css({\n                                width: '',\n                                display: 'inline-block'\n                            });\n                            var last_row_rect = last_row[0].getBoundingClientRect();\n                            var partial_width = last_row_rect.width;\n                            // Shift command prompt up one line and to the right\n                            // enough so that it appears directly next to the\n                            // partially constructed output line\n                            cmd_prompt.css('margin-left', partial_width);\n                            cmd_outer.css('top', -last_row_rect.height);\n                            // Measure length of partial line in characters\n                            var char_width = self.geometry().char.width;\n                            var prompt_margin = Math.round(partial_width / char_width);\n                            command_line.__set_prompt_margin(prompt_margin);\n                        }\n                        limit_lines();\n                        fire_event('onFlush');\n                        var cmd_cursor = self.find('.cmd-cursor');\n                        var offset = self.find('.cmd').offset();\n                        var self_offset = self.offset();\n                        setTimeout(function() {\n                            css(self[0], {\n                                '--terminal-height': self.height(),\n                                '--terminal-x': offset.left - self_offset.left,\n                                '--terminal-y': offset.top - self_offset.top,\n                                '--terminal-scroll': self.prop('scrollTop')\n                            });\n                            // Firefox won't reflow the cursor automatically, so\n                            // hide it briefly then reshow it\n                            cmd_cursor.hide();\n                            setTimeout(function() {\n                                cmd_cursor.show();\n                            }, 0);\n                        }, 0);\n                        if (scroll) {\n                            self.scroll_to_bottom();\n                        }\n                    } catch (e1) {\n                        if (is_function(settings.exceptionHandler)) {\n                            try {\n                                settings.exceptionHandler.call(\n                                    self,\n                                    e1,\n                                    'TERMINAL (Flush)'\n                                );\n                            } catch (e2) {\n                                settings.exceptionHandler = $.noop;\n                                alert_exception('[exceptionHandler]', e2);\n                            }\n                        } else {\n                            alert_exception('[Flush]', e1);\n                        }\n                    } finally {\n                        buffer.clear();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, value, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length() + line; // yes +\n                    }\n                    if (!lines.valid_index(line)) {\n                        self.error('Invalid line number ' + line);\n                    } else if (value === null) {\n                        lines.update(line, null);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        value = preprocess_value(value, {\n                            update: true,\n                            line: line\n                        });\n                        if (value === false) {\n                            return self;\n                        }\n                        unpromise(value, function(value) {\n                            var ret = prepare_render(value, options);\n                            if (ret) {\n                                value = ret[0];\n                                options = ret[1];\n                            }\n                            options = lines.update(line, value, options);\n                            var next = process_line({\n                                value: value,\n                                index: line,\n                                options: options\n                            });\n                            // process_line can return a promise\n                            // value is function that resolve to promise\n                            unpromise(next, function() {\n                                // trigger flush even if next is undefined\n                                self.flush({\n                                    scroll: false,\n                                    update: true\n                                });\n                            });\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length() - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                var arg_defined = arguments.length > 0;\n                var d = new $.Deferred();\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            exec: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            unmount: $.noop,\n                            delay: settings.execAnimationDelay,\n                            ansi: false,\n                            typing: false,\n                            keepWords: false,\n                            invokeMethods: settings.invokeMethods,\n                            onClear: null,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes,\n                            newline: true\n                        }, options || {});\n                        // finalize function is passed around and invoked\n                        // in terminal::flush after content is added to DOM\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                if (locals.ansi) {\n                                    div.addClass('ansi');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize.call(self, div);\n                                    }\n                                    var $images = div.find('img');\n                                    $images.each(function() {\n                                        var self = $(this);\n                                        var img = new Image();\n                                        img.onerror = function() {\n                                            self.replaceWith(use_broken_image);\n                                        };\n                                        img.src = this.src;\n                                    });\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (!buffer.empty()) {\n                                self.flush();\n                            }\n                        }\n                        if (fire_event('onBeforeEcho', [arg]) === false) {\n                            return;\n                        }\n                        if (locals.typing) {\n                            if (typeof arg !== 'string') {\n                                return d.reject('echo: Typing animation require string' +\n                                                ' or promise that resolve to string');\n                            }\n                            if (typeof locals.delay !== 'number' || isNaN(locals.delay)) {\n                                return d.reject('echo: Invalid argument, delay need to' +\n                                                ' be a number');\n                            }\n                            var p = self.typing('echo', locals.delay, arg, locals);\n                            p.then(function() {\n                                d.resolve();\n                            });\n                            return;\n                        }\n                        var value;\n                        if (typeof arg === 'function') {\n                            value = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                value = String(arg);\n                            } else {\n                                value = '';\n                            }\n                        } else {\n                            var ret = preprocess_value(arg, {});\n                            if (ret === false) {\n                                return self;\n                            }\n                            value = ret;\n                        }\n                        if (is_promise(value)) {\n                            echo_promise = true;\n                        }\n                        unpromise(value, function(value) {\n                            if (render(value, locals)) {\n                                return self;\n                            }\n                            var index = lines.length();\n                            var last_newline = lines.has_newline();\n                            if (!last_newline) {\n                                index--;\n                            }\n                            if (!locals.newline && value[value.length - 1] === '\\n') {\n                                // This adjusts the value, so that when it updates or\n                                // refresh the lines list it does the right thing.\n                                value = value.slice(0, -1);\n                                locals.newline = true;\n                            }\n                            var next = process_line({\n                                value: value,\n                                options: locals,\n                                index: index\n                            });\n                            // queue async functions in echo\n                            if (is_promise(next)) {\n                                echo_promise = true;\n                            }\n                            lines.push([value, locals]);\n                            unpromise(next, function() {\n                                // extended commands should be processed only\n                                // once in echo and not on redraw\n                                if (locals.flush) {\n                                    self.flush();\n                                    fire_event('onAfterEcho', [arg]);\n                                }\n                                echo_promise = false;\n                                var original = echo_delay;\n                                echo_delay = [];\n                                for (var i = 0; i < original.length; ++i) {\n                                    self.echo.apply(self, original[i]);\n                                }\n                            });\n                        });\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (echo_promise) {\n                    echo_delay.push([arg, options]);\n                } else {\n                    echo(arg);\n                }\n                if (options && options.typing) {\n                    return d.promise();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            typing: function(type, delay, string, options) {\n                var d = new $.Deferred();\n                var settings;\n                var finish;\n                if (typeof options === 'object') {\n                    finish = options.finalize || $.noop;\n                    settings = $.extend({}, options, {\n                        delay: delay,\n                        finalize: done\n                    });\n                } else {\n                    finish = options || $.noop;\n                    settings = {\n                        delay: delay,\n                        finalize: done\n                    };\n                }\n                function done() {\n                    d.resolve();\n                    if (is_function(finish)) {\n                        finish.apply(self, arguments);\n                    }\n                }\n                var animations = ['prompt', 'echo', 'enter', 'insert'];\n                function valid_animation() {\n                    return animations.indexOf(type) >= 0;\n                }\n                when_ready(function ready() {\n                    if (valid_animation()) {\n                        if (type === 'prompt') {\n                            typed_prompt(string, settings);\n                        } else if (type === 'echo') {\n                            typed_message(string, settings);\n                        } else if (type === 'enter') {\n                            with_prompt(self.get_prompt(), function(prompt) {\n                                typed_enter(prompt, string, settings);\n                            }, self);\n                        } else if (type === 'insert') {\n                            with_prompt(self.get_prompt(), function(prompt) {\n                                typed_insert(prompt, string, settings);\n                            }, self);\n                        }\n                    } else {\n                        d.reject('Invalid type only `echo` and `prompt` are supported');\n                    }\n                });\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;terminal-error]');\n                    return '[[;;;terminal-error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    }).catch(make_label_error('Echo Error'));\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    var output = stack.split(/\\n/g).map(function(trace) {\n                        // nested formatting will handle urls but that formatting\n                        // can be removed - this code was created before\n                        // that formatting existed (see commit ce01c3f5)\n                        return '[[;;;terminal-error]' +\n                            trace.replace(url_re, function(url) {\n                                return ']' + url + '[[;;;terminal-error]';\n                            }) + ']';\n                    }).join('\\n');\n                    self.echo(output, {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var options;\n                if (typeof arguments[1] === 'object') {\n                    options = $.extend({\n                        typing: false,\n                        delay: settings.execAnimationDelay,\n                        success: $.noop,\n                        cancel: $.noop\n                    }, arguments[1]);\n                } else {\n                    options = {\n                        typing: false,\n                        success: success || $.noop,\n                        cancel: cancel || $.noop\n                    };\n                }\n                if (options.typing) {\n                    var prompt = self.get_prompt();\n                    options.typing = false;\n                    return self.typing('prompt', options.delay, message).then(function() {\n                        return self.set_prompt(prompt).read(message, options);\n                    });\n                }\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(options.success)) {\n                        options.success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(options.cancel)) {\n                                options.cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // name the interpreter from last command\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = states.PAUSED;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    //self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.extend(\n                            {},\n                            terminal_init_keymap,\n                            $.omap(keymap || {}, function(key, fn) {\n                                if (!terminal_init_keymap[key]) {\n                                    return fn.bind(self);\n                                }\n                                return function(e, original) {\n                                    // new keymap function will get default as 2nd arg\n                                    return fn.call(self, e, function() {\n                                        return terminal_init_keymap[key](e, original);\n                                    });\n                                };\n                            })\n                        );\n                        command_line.keymap(null).keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!terminal_init_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return terminal_init_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    self.touch_scroll('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill, .terminal-font').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    var scroll_marker = self.find('.terminal-scroll-marker');\n                    if (is_bottom_observer) {\n                        is_bottom_observer.unobserve(scroll_marker[0]);\n                    }\n                    scroll_marker.remove();\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    if (is_mobile) {\n                        self.off([\n                            'touchstart.terminal',\n                            'touchmove.terminal',\n                            'touchend.terminal'\n                        ].join(' '));\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    if (body_terminal) {\n                        var $body = $(body_terminal);\n                        if ($body.attr('class') === 'full-screen-terminal') {\n                            $body.removeAttr('class');\n                        } else {\n                            $body.removeClass('full-screen-terminal');\n                        }\n                        self.remove();\n                    }\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: ref: https://stackoverflow.com/a/18927969/387194\n            // -------------------------------------------------------------\n            scroll_to: function(elem) {\n                var scroll = self.scrollTop() - self.offset().top + $(elem).offset().top;\n                self.scrollTop(scroll);\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else if (typeof is_bottom_detected === 'boolean') {\n                    return is_bottom_detected;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self[0].scrollTop;\n                    height = self[0].offsetHeight;\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: create terminal object clone, used by pipe\n            // -------------------------------------------------------------\n            duplicate: function() {\n                var copy = $(self);\n                return $.extend(copy, public_api);\n            },\n            // -------------------------------------------------------------\n            // :: return output flush buffer\n            // -------------------------------------------------------------\n            get_output_buffer: function(options) {\n                var settings = $.extend({\n                    html: false\n                }, options);\n                var result = [];\n                var append = false;\n                buffer.forEach(function(data) {\n                    if (data) {\n                        if (is_function(data.finalize)) {\n                            append = !data.newline;\n                        } else {\n                            var output;\n                            if (settings.html) {\n                                output = data.line;\n                            } else {\n                                output = data.raw;\n                            }\n                            if (append) {\n                                var last = result.length - 1;\n                                result[last] += output;\n                            } else {\n                                result.push(output);\n                            }\n                        }\n                    }\n                });\n                if (settings.html) {\n                    return result.map(function(line) {\n                        return '<div>' + line + '</div>';\n                    }).join('\\n');\n                }\n                return result.join('\\n');\n            },\n            // -------------------------------------------------------------\n            // :: clear flush buffer\n            // -------------------------------------------------------------\n            clear_buffer: function() {\n                buffer.clear();\n                return self;\n            },\n            // -------------------------------------------------------------\n            animating: function() {\n                return states.TYPING;\n            },\n            // -------------------------------------------------------------\n            // :: API for animation sequance\n            // -------------------------------------------------------------\n            animation: function(fn) {\n                var deferred = new $.Deferred();\n                if (typeof fn === 'function') {\n                    states.TYPING = true;\n                    when_ready(function() {\n                        return unpromise(fn(), function() {\n                            states.TYPING = false;\n                            deferred.resolve();\n                        });\n                    });\n                } else {\n                    deferred.resolve();\n                }\n                return deferred.promise();\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        });\n        $.extend(self, public_api);\n        // -----------------------------------------------------------------\n        // :: INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        self.data('terminal', self);\n        // synchronize the echo calls (used for async functions) that need\n        // to be called in order\n        var echo_delay = [];\n        var echo_promise = false;\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var prev_exec_cmd;\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var animating = false; // true on typing animation\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var is_bottom_detected;\n        var is_bottom_observer;\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        // ---------------------------------------------------------------------\n        var states = {\n            ENABLED: settings.enabled,\n            PAUSED: false,\n            TYPING: false,\n            FROZEN: false\n        };\n        // ---------------------------------------------------------------------\n        function allow_input() {\n            return states.ENABLED && (\n                !(states.PAUSED ||\n                  states.TYPING ||\n                  states.FROZEN) || !settings.pauseEvents);\n        }\n        // ---------------------------------------------------------------------\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        var char_size = get_char_size(self);\n        // this is needed when terminal have selector with --size that is not\n        // bare .terminal so fake terminal will not get the proper size #602\n        var need_char_size_recalculate = !terminal_ready(self);\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        // ---------------------------------------------------------------------\n        // :: FormatBuffer is used to to buffer the lines that echoed\n        // :: it have append function that have 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: actuall echo to the terminal happen when calling flush\n        // ---------------------------------------------------------------------\n        var buffer = new FormatBuffer(function(options) {\n            return {\n                linksNoReferrer: settings.linksNoReferrer,\n                linksNoFollow: settings.linksNoFollow,\n                anyLinks: settings.anyLinks,\n                charWidth: char_size.width,\n                useCache: settings.useCache,\n                escape: false,\n                allowedAttributes: options.allowedAttributes || []\n            };\n        });\n        var lines = new OutputLines(function() {\n            return settings;\n        });\n        var storage = new StorageHelper(settings.memory);\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        $(broken_image).hide().appendTo(wrapper);\n        var font_resizer = $('<div class=\"terminal-font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (is_array(init_interpreter)) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n                self.scroll_to_bottom();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function blur_terminal() {\n            old_enabled = states.ENABLED;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // -------------------------------------------------------------------------------\n        function stringify_value(value) {\n            if (is_function(value)) {\n                value = value();\n            }\n            if (value && is_function(value.then)) {\n                return value.then(stringify_value);\n            }\n            if (get_type(value) !== 'string') {\n                if (is_function(settings.parseObject)) {\n                    var ret = settings.parseObject(value);\n                    if (get_type(ret) === 'string') {\n                        value = ret;\n                    }\n                } else if (is_array(value)) {\n                    value = $.terminal.columns(value, self.cols(), settings.tabs);\n                } else {\n                    value = String(value);\n                }\n            }\n            return value;\n        }\n        // -------------------------------------------------------------------------------\n        function context_callback_proxy(fn) {\n            if (fn.proxy) {\n                return fn;\n            }\n            var wrapper = function(callback) {\n                return fn.call(self, callback, self);\n            };\n            wrapper.proxy = true;\n            return wrapper;\n        }\n        // -------------------------------------------------------------------------------\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event.text = object;\n                    } else if (object instanceof Blob) {\n                        event.image = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then || ret.done)) {\n                            return (ret.then || ret.done).call(ret, function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else if (ret !== false) {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^(data:|blob:)/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(function(text) {\n                                    echo(text.replace(/\\r/g, ''));\n                                });\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text.replace(/\\r/g, ''));\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var terminal_init_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(interpreter) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                interpreter.completion = 'settings';\n            }\n            var prompt = settings.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: terminal_init_keymap\n            }, interpreter));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                mobileDelete: settings.mobileDelete,\n                mobileIngoreAutoSpace: settings.mobileIngoreAutoSpace,\n                prompt: global_login_fn ? false : prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                charWidth: char_size.width,\n                keydown: key_down,\n                keymap: terminal_init_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                allowedAttributes: settings.allowedAttributes,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    make_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    make_cursor_visible();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                if (is_mobile) {\n                    return;\n                }\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume, it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                (function() {\n                    self.addClass('terminal-mobile');\n                    var start;\n                    var move;\n                    var enabled;\n                    var SENSITIVITY = 3;\n                    var clip = command_line.clip();\n                    var HOLD_TIME = 200;\n                    var timer;\n                    clip.$node.off('touchstart.cmd');\n                    self.on('touchstart.terminal', function(e) {\n                        e = e.originalEvent;\n                        window.touch_event = e;\n                        if (e.target.tagName.toLowerCase() === 'a') {\n                            return;\n                        }\n                        if (!states.FROZEN && e.touches.length === 1) {\n                            enabled = self.enabled();\n                            var point = e.touches[0];\n                            start = {\n                                x: point.clientX,\n                                y: point.clientY\n                            };\n                            timer = setTimeout(function() {\n                                start = null;\n                            }, HOLD_TIME);\n                        }\n                    }).on('touchmove.terminal', function(e) {\n                        if (e.touches.length === 1 && start) {\n                            var point = e.touches[0];\n                            var diff_x = Math.abs(point.clientX - start.x);\n                            var diff_y = Math.abs(point.clientY - start.y);\n                            if (diff_x > SENSITIVITY || diff_y > SENSITIVITY) {\n                                move = true;\n                            }\n                        }\n                    }).on('touchend.terminal', function() {\n                        if (start) {\n                            clearTimeout(timer);\n                            if (!move) {\n                                if (!enabled) {\n                                    clip.focus();\n                                    self.focus();\n                                } else {\n                                    clip.blur();\n                                    self.disable();\n                                }\n                            }\n                        }\n                        move = false;\n                        start = null;\n                    });\n                })();\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // context is used to check if terminal should not scroll to bottom\n                // after right click on  e.g. img, canvas, a and then click to hide\n                // the menu. The problem is that right click on those elements don't\n                // move the textarea to show proper context menu like save as on images\n                // or open on links. See #644 bug\n                var was_ctx_event;\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.cmd-prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if (was_ctx_event) {\n                            was_ctx_event = false;\n                            return;\n                        }\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (states.ENABLED) {\n                                self.disable();\n                            }\n                        } else if (get_selected_html() === '' && $target) {\n                            if (++count === 1) {\n                                if (!states.FROZEN) {\n                                    if (!states.ENABLED) {\n                                        self.focus();\n                                        self.scroll_to_bottom();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var $clip = command_line.clip().$node;\n                    function is_context_event(e) {\n                        return e.type === 'mousedown' && e.buttons === 2 ||\n                            e.type === 'contextmenu';\n                    }\n                    var event_name;\n                    if ('oncontextmenu' in window) {\n                        event_name = 'contextmenu.terminal';\n                    } else {\n                        event_name = 'mousedown.terminal';\n                    }\n                    self.on(event_name, function(e) {\n                        was_ctx_event = get_selected_html() === '' && is_context_event(e);\n                        if (was_ctx_event) {\n                            var $target = $(e.target);\n                            if ($target.is('img,value,audio,object,canvas,a')) {\n                                return;\n                            }\n                            if (!self.enabled()) {\n                                self.enable();\n                            }\n                            var cmd_offset = command_line.offset();\n                            var cmd_rect = command_line[0].getBoundingClientRect();\n                            var self_offset = self.offset();\n                            var top_limit = self_offset.top - cmd_offset.top;\n                            var top = Math.max(e.pageY - cmd_offset.top - 20, top_limit);\n                            var left = e.pageX - cmd_offset.left - 20;\n                            var height = 4 * 14;\n                            var width = 5 * 14;\n                            var rect = self[0].getBoundingClientRect();\n                            // we need width without scrollbar\n                            var content_width = fill.outerWidth();\n                            // fix jumping when click near bottom or left edge #592\n                            var diff_h = (top + cmd_rect.top + height);\n                            diff_h = diff_h - rect.height - rect.top;\n                            var diff_w = (left + cmd_rect.left + width);\n                            // in Chrome scrollbar is added even when width\n                            // of textarea is smaller, adding 1px solved the issue\n                            diff_w = diff_w - content_width - rect.left;\n                            if (diff_h > 0) {\n                                height -= Math.ceil(diff_h);\n                            }\n                            if (diff_w > 0) {\n                                width -= Math.ceil(diff_w);\n                            }\n                            $clip.attr('style', [\n                                'left:' + left + 'px !important',\n                                'top:' + top + 'px !important',\n                                'width:' + width + 'px !important',\n                                'height:' + height + 'px !important'\n                            ].join(';'));\n                            if (!$clip.is(':focus')) {\n                                $clip.focus();\n                            }\n                            self.stopTime('textarea');\n                            self.oneTime(100, 'textarea', function() {\n                                var props = {\n                                    left: '',\n                                    top: '',\n                                    width: '',\n                                    height: ''\n                                };\n                                if (!is_css_variables_supported) {\n                                    var in_line = self.find('.cmd .cmd-cursor-line')\n                                        .prevUntil('.cmd-prompt').length;\n                                    props.top = in_line * 14 + 'px';\n                                }\n                                $clip.css(props);\n                            });\n                            self.stopTime('selection');\n                            self.everyTime(20, 'selection', function() {\n                                if ($clip[0].selection !== $clip[0].value) {\n                                    if (get_textarea_selection($clip[0])) {\n                                        clear_textarea_selection($clip[0]);\n                                        select(\n                                            self.find('.terminal-output')[0],\n                                            self.find('.cmd div:last-of-type')[0]\n                                        );\n                                        self.stopTime('selection');\n                                    }\n                                }\n                            });\n                        }\n                    });\n                })();\n                self.on('scroll', function() {\n                    var $textarea = self.find('textarea');\n                    var rect = self[0].getBoundingClientRect();\n                    var height = self[0].scrollHeight;\n                    var scrollTop = self.scrollTop();\n                    var diff = height - (scrollTop + rect.height);\n                    // if scrolled to bottom top need to be aligned with cursor line\n                    // done by CSS file using css variables\n                    if (diff === 0) {\n                        $textarea.css('top', '');\n                    } else {\n                        $textarea.css('top', -diff);\n                    }\n                });\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.terminal-exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href, self.cols());\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (states.ENABLED) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('charWidth', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    if (need_char_size_recalculate) {\n                        need_char_size_recalculate = !terminal_ready(self);\n                        calculate_char_size();\n                    }\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                var options = {\n                    prefix: 'terminal-'\n                };\n                self.resizer('unbind').resizer(resize, options);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                }, options);\n            }\n            function bottom_detect(intersections) {\n                is_bottom_detected = intersections[0].intersectionRatio === 1;\n            }\n            function create_bottom_detect() {\n                if (window.IntersectionObserver) {\n                    var top = $('<div class=\"terminal-scroll-marker\"/>').appendTo(self);\n                    var marker = top;\n                    if (settings.scrollBottomOffset !== -1) {\n                        marker = $('<div/>').css({\n                            height: settings.scrollBottomOffset\n                        }).appendTo(top);\n                    }\n                    is_bottom_observer = new IntersectionObserver(bottom_detect, {\n                        root: self[0]\n                    });\n                    is_bottom_observer.observe(marker[0]);\n                }\n            }\n            // this observer can be added imedietely even if terminal is not in the DOM\n            // because both of the elements (root and target) are in same fragment\n            create_bottom_detect();\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                } else {\n                    // hide terminal content until it's resized (and num chars calculated)\n                    wrapper.css('visibility', 'hidden');\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                        wrapper.css('visibility', '');\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                        wrapper.css('visibility', 'hidden');\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: null\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            // this observer need to be added when terminal is in the DOM\n                            observe_visibility();\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (states.ENABLED && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec, options) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                var defer = $.Deferred();\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (states.PAUSED) {\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2], options).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2], options).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            if (!hash.match(/\\[/)) {\n                                // fix the hash to look like array if it's not\n                                replace_hash(hash_commands);\n                            }\n                            var i = 0;\n                            var options = {\n                                typing: settings.execAnimation,\n                                delay: settings.execAnimationDelay\n                            };\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec, options).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if ((have_scrollbar() || ret === false) && !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n                self.touch_scroll(function(event) {\n                    var delta = event.current.clientY - event.previous.clientY;\n                    var ret;\n                    var interpreter = interpreters.top();\n                    if (is_function(interpreter.touchscroll)) {\n                        ret = interpreter.touchscroll(event, delta, self);\n                    } else if (is_function(settings.touchscroll)) {\n                        ret = settings.touchscroll(event, delta, self);\n                    }\n                    css(self[0], {\n                        '--terminal-scroll': self.prop('scrollTop')\n                    });\n                    if (ret === true) {\n                        return;\n                    }\n                    return false;\n                });\n            })();\n        }); // make_interpreter\n        return self;\n    }; // terminal plugin\n});\n"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","self","window","factory","undefined","root","Error","define","amd","jquery","wcwidth","module","exports","jQuery","require","$","cash","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","item","bind","clone","Map","clear","forEach","value","delete","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","debounce","FUNC_ERROR_TEXT","isObject","type","now","func","wait","options","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","is","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","focusNode","setSelectionRange","select","make_callback_plugin","factory_settings","init","noop","destroy","name","callback","trigger","unbind","data_name","$this","fireWith","data","has","removeData","resizer","settings","prefix","first","on","ResizeObserver","observe","iframe","addClass","appendTo","contentWindow","observer","unobserve","find","off","touch_scroll","origin","previous","originalEvent","tagName","touches","current","preventDefault","jquery_resolve","defer","Deferred","promise","unpromise","catch","done","then","promises","filter","when","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entries","isIntersecting","ratio","entity_re","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","format_begin_re","format_start_re","format_end_re","self_closing_re","color_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_exec_split_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","broken_image","use_broken_image","animation_supported","animation","domPrefixes","elm","createElement","style","animationName","agent","is_IE","is_IEMobile","is_ch_unit_supported","div","width","is_css_variables_supported","CSS","supports","is_android","is_key_native","KeyboardEvent","proto","getOwnPropertyDescriptor","is_browser","is_mobile","check","substr","platform","maxTouchPoints","vendor","opera","ch_unit_bug","base","ch","space","abs","css","obj","isPlainObject","keys","setProperty","getPropertyValue","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","terminal","Exception","message","exception_message","generate_id","firstPart","random","secondPart","scrollbar_event","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","defined","append","front","restart","Boolean","Stack","is_array","size","pop","concat","WorkerCache","validation","action","onCache","_onCache","_action","_validation","_cache","validate","valid","History","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","next","old","purge","enable","disable","toggle","OutputLines","_settings","_lines","_snapshot","make_snapshot","snapshot","get_partial","update_snapshot","limit_snapshot","clear_snapshot","get_snapshot","acc","arr","some","is_promise","import","has_newline","last_line","newline","line","onClear","len","update","valid_index","render","cols","lines_to_show","outputLimit","pivot","FormatBuffer","_options","_format_cache","_output_buffer","NEW_LINE","raw","use_cache","useCache","empty","raw_lines","formatted","finalize","clear_cache","is_empty","with_prompt","prompt","context","escape_brackets","deferred","string","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","history","onPositionChange","onCommandChange","inputStyle","mobileDelete","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","mobileIngoreAutoSpace","repeatTimeoutKeys","tabindex","tabs","mobile_ignore_key","maybe_data","id","wrapper","cursor_line","clip","$node","autocapitalize","autocorrect","spellcheck","insertAfter","val","html","blur","removeAllRanges","before","num_chars","char_width","last_rendered_prompt","prompt_last_line","just_prompt_len","extra_prompt_margin","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","restart_animation","paste_count","line_marker","line_marker_re","empty_marker_re","get_char_pos","closest","parent","prevAll","prevUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","ie_key_fix","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","which","keymap","default_keymap","ALT+D","delete_forward","clipboard","HOLD+ALT+D","hold","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","HOLD+ARROWUP","up_arrow","ARROWUP","CTRL+ARROWUP","prev_history","CTRL+P","ARROWDOWN","down_arrow","HOLD+ARROWDOWN","CTRL+N","next_history","CTRL+ARROWDOWN","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","bare_text","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","get_selected_html","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","delete_character_forward","delete_word_forward","substring","m","delete_character_backward","delete_word_backward","isenabled","paste","fix_textarea","first_up_history","have_newlines","have_wrapping","lengths","wrap","simple_split_command_line","lines","split_equal","escape_regex","unescape_brackets","formatting","strip","col","column","prev","splitted","left_over","diff","after","$line","ending","next_broken","lastIndexOf","sum","mobile_focus","$clip","fix_cursor","getComputedStyle","_class","className","position_only","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","get_char_width","$prompt","get_num_chars","floor","process_cmd_line","skip_empty","nextUntil","first_len","strlen","cmd_line_worker","_previous_value","_cols","split_command_line","skip_formatted_position","escape_formatting","format_options","unixFormattingEscapeBrackets","apply_formatters","normalize","stack","encoded","encode","charWidth","allowedAttributes","partition","is_multiline","start","is_emoji_formatting","is_formatting","draw_cursor_line","end_line","cursor_end_line","empty_cursor","before_str","c_before","cursor_len","lines_after","last_ins","lines_before","display","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","find_position","make_guess","opts","cmp","search_pos","guess","next_guess","codepoint_len","binary_search","chars","split_characters","prev_prompt_data","format_prompt","have_formatting","format_split","encoded_last_line","crlf","spans","hide","show","fire_change_command","option","stay","removed","silent","new_keymap","original","bare_command","doc","keypress_event","keydown_event","input_event","include_prompt","__set_prompt_margin","user_prompt","should_redraw","relative","refresh","display_position","command_len","new_formatted_pos","visible","resize","new_num_chars","invoke_key","shortcut","warn","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","skip_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold_pause","skip_insert","prev_key","is_backspace","is_single","is_delay_key","specials","clear_reverse_search_key","skip_keydown","fake","exception","keydown","clear_hold","is_terminal_selected","keypress","normalized","inArray","event","chr","skip_input","finalize_input_event","get_next_character","keycode","charCodeAt","was_down","count","$target","is_prompt","down","button","count_selfclosing_formatting","entities","&amp;","&lt;","&gt;","&Agrave;","&Aacute;","&Acirc;","&Atilde;","&Auml;","&Aring;","&AElig;","&Ccedil;","&Egrave;","&Eacute;","&Ecirc;","&Euml;","&Igrave;","&Iacute;","&Icirc;","&Iuml;","&ETH;","&Ntilde;","&Ograve;","&Oacute;","&Ocirc;","&Otilde;","&Ouml;","&Oslash;","&Ugrave;","&Uacute;","&Ucirc;","&Uuml;","&Yacute;","&THORN;","&szlig;","&agrave;","&aacute;","&acirc;","&atilde;","&auml;","&aring;","&aelig;","&ccedil;","&egrave;","&eacute;","&ecirc;","&euml;","&igrave;","&iacute;","&icirc;","&iuml;","&eth;","&ntilde;","&ograve;","&oacute;","&ocirc;","&otilde;","&ouml;","&oslash;","&ugrave;","&uacute;","&ucirc;","&uuml;","&yacute;","&thorn;","&yuml;","&nbsp;","&iexcl;","&cent;","&pound;","&curren;","&yen;","&brvbar;","&sect;","&uml;","&copy;","&ordf;","&laquo;","&not;","&shy;","&reg;","&macr;","&deg;","&plusmn;","&sup2;","&sup3;","&acute;","&micro;","&para;","&cedil;","&sup1;","&ordm;","&raquo;","&frac14;","&frac12;","&frac34;","&iquest;","&times;","&divide;","&forall;","&part;","&exist;","&empty;","&nabla;","&isin;","&notin;","&ni;","&prod;","&sum;","&minus;","&lowast;","&radic;","&prop;","&infin;","&ang;","&and;","&or;","&cap;","&cup;","&int;","&there4;","&sim;","&cong;","&asymp;","&ne;","&equiv;","&le;","&ge;","&sub;","&sup;","&nsub;","&sube;","&supe;","&oplus;","&otimes;","&perp;","&sdot;","&Alpha;","&Beta;","&Gamma;","&Delta;","&Epsilon;","&Zeta;","&Eta;","&Theta;","&Iota;","&Kappa;","&Lambda;","&Mu;","&Nu;","&Xi;","&Omicron;","&Pi;","&Rho;","&Sigma;","&Tau;","&Upsilon;","&Phi;","&Chi;","&Psi;","&Omega;","&alpha;","&beta;","&gamma;","&delta;","&epsilon;","&zeta;","&eta;","&theta;","&iota;","&kappa;","&lambda;","&mu;","&nu;","&xi;","&omicron;","&pi;","&rho;","&sigmaf;","&sigma;","&tau;","&upsilon;","&phi;","&chi;","&psi;","&omega;","&thetasym;","&upsih;","&piv;","&OElig;","&oelig;","&Scaron;","&scaron;","&Yuml;","&fnof;","&circ;","&tilde;","&ensp;","&emsp;","&thinsp;","&zwnj;","&zwj;","&lrm;","&rlm;","&ndash;","&mdash;","&lsquo;","&rsquo;","&sbquo;","&ldquo;","&rdquo;","&bdquo;","&dagger;","&Dagger;","&bull;","&hellip;","&permil;","&prime;","&Prime;","&lsaquo;","&rsaquo;","&oline;","&euro;","&trade;","&larr;","&uarr;","&rarr;","&darr;","&harr;","&crarr;","&lceil;","&rceil;","&lfloor;","&rfloor;","&loz;","&spades;","&clubs;","&hearts;","&diams;","render_entities","_","hex","code","entity","safe","char_len","make_re_fn","starts_with","make_next_char_fun","tests","m1","m2","match_entity","match_combo","match_emoji","astral_match","normalize_position","char_width_prop","extra_css","bare","wide_characters","specs","spec","make_string","compare_fn","more_args","mid","startContainer","parentNode","term","sel","rangeCount","appendChild","cloneContents","innerHTML","with_selection","ranges","addRange","process_selected_line","$self","hasClass","process_div","process_selected_html","stdout","$html","$cmd_lines","support_copy","queryCommandSupported","$textarea","had_focus","writeText","execCommand","$text","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","onTerminalChange","setBaseAndExtent","setStart","childNodes","process_command","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","is_extended_command","each_extended_command","parts","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","rep_len","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","next_iteration","char","is_next_space","prev_space","is_last","in_text","space_count","re_ent","braket","start_index","end_index","start_formatting","end_formatting","prev_index","semicolons","amp","keep_words","prev_format","first_index","line_length","last_bracket","can_break","stripped","text_len","after_index","new_index","closed_formatting","matched","sp","nested_formatting","class_i","attrs_i","unique","update_style","new_style","old_style","parse_style","prop","stringify_formatting","stringify_attrs","stringify_class","stringify_styles","ignore","attrs","stringify_style","klass","get_inherit_style","update_attrs","new_attrs","classes","__inherit__","test_lengths","formatter","__no_warn__","should_format","props","have_any","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","after_len","position_partial","partial","linksNoReferrer","linksNoFollow","escape","anyLinks","filter_attr_names","names","allowed","filters","clean_data","add_attrs","rel_attr","rel","unshift","is_path","url","with_url_validation","valid_href","valid_src","background","data_text","pre_process_link","pre_process_image","style_str","text_decoration","extra","columns","no_formatting","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","reject","eval","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","method","params","success","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","contentType","dataType","async","rpc","res","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","fill","all","same","same_case","is_object","is_deferred","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","exceptionHandler","pauseEvents","softPause","mousewheel","touchscroll","cancelableAjax","processArguments","execAnimation","execAnimationDelay","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","unixFormatting","escapeBrackets","ansiParser","ansiArt","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","doubleTabEchoCommand","completion","onInit","onBlur","onFocus","onExit","onPush","onPop","renderHandler","onAfterRedraw","onEchoCommand","onFlush","onBeforeCommand","onAfterCommand","onBeforeEcho","onAfterEcho","onBeforeLogin","onAfterLogout","onBeforeLogout","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveLoop","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","preprocess_value","Animation","is_node","unmount","prepare_render","replaceWith","echo","get_node","Element","display_object","print_line","url_spec","pause","file","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","found","make_interpreter","user_intrp","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","links","escaped","linkify","should_wrap","line_cache","process_extended_commands","line_settings","clear_exec","prev_exec_cmd","process_line","stringify_value","buffer","raw_string","words","keepWords","scroll","command_line","detached_output","detach","rows","fire_event","limit_lines","$lines","for_remove","parents","show_greetings","greetings","signature","echo_command","get_command","have_scrollbar","restore_state","command_idx","import_view","export_view","make_label_error","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","before_async_exec","saved_change_hash","after_exec","is_animation_promise","invoke","force_awake","states","PAUSED","ghost","level","logout","in_login","get_token","set_token","global_logout","clear_loging_storage","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","context_callback_proxy","terminal_init_keymap","fun","init_queue","onStart","skip_local","scroll_to_view","scroll_to","it","make_cursor_visible","replace_hash","state","replaceState","new_hash","href","hashchange","decodeURIComponent","echo_delay","onPause","was_paused","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","before_cursor","complete","word","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","frozen","paused","tab_count","r","readyState","abort","key_press","allow_input","typed","finish_typing_fn","typing_animation","formattted","get_prompt","char_i","new_prompt","set_prompt","is_bottom","delay","typed_prompt","typed_insert","helper","typed_message","typing","typed_enter","with_typing","kind","else_fn","finalize_fn","with_typing_fn","d","when_ready","ready","locals","p","queue","selector","body_terminal","public_api","terminal_id","scrollTop","user_export","ENABLED","view","ignore_hash","exec_settings","cmd_ready","delayed_commands","autologin","infinite","logins","popUserPass","login_callback","set_mask","pass","err","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","geometry","padding","old_width","old_height","history_state","run","setImmediate","clear_history_state","x","animate","FROZEN","TYPING","freeze","enter","get_output","new_num_rows","appending_to_partial","children","cmd_prompt","cmd_outer","last_row","last_row_rect","partial_width","prompt_margin","round","cmd_cursor","self_offset","--terminal-height","--terminal-x","--terminal-y","--terminal-scroll","e1","e2","remove_line","arg_defined","ansi","$images","img","Image","onerror","src","echo_promise","last_newline","finish","animations","valid_animation","lineNumber","trace","amount","local","local_name","intrp","read","infiniteLogin","push_settings","object_or_name","font_resizer","blur_terminal","focus_terminal","visibility_observer","scroll_marker","is_bottom_observer","mutation_observer","disconnect","$body","removeAttr","defunct","elem","scrollHeight","is_bottom_detected","scroll_height","scroll_top","offsetHeight","copy","get_output_buffer","clear_buffer","command_queue","need_char_size_recalculate","old_enabled","ignoreSystemDescribe","base_interpreter","parseObject","proxy","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","onResize","elementFromPoint","clientY","$win","addEventListener","move","SENSITIVITY","HOLD_TIME","touch_event","point","y","diff_x","diff_y","was_ctx_event","click","ignore_elements","mousedown","mouseup","timeout","dblclick","is_context_event","buttons","event_name","cmd_offset","cmd_rect","top_limit","pageY","pageX","content_width","diff_h","diff_w","ceil","calculate_char_size","create_resizers","bottom_detect","intersections","intersectionRatio","create_bottom_detect","marker","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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"}